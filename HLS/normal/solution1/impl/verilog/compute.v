// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="compute,hls_ip_2018_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.399750,HLS_SYN_LAT=3969,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=12,HLS_SYN_FF=2867,HLS_SYN_LUT=4147,HLS_VERSION=2018_2_1}" *)

module compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        covariance_matrix_address0,
        covariance_matrix_ce0,
        covariance_matrix_we0,
        covariance_matrix_d0,
        covariance_matrix_address1,
        covariance_matrix_ce1,
        covariance_matrix_we1,
        covariance_matrix_d1,
        centroid_address0,
        centroid_ce0,
        centroid_we0,
        centroid_d0,
        centroid_address1,
        centroid_ce1,
        centroid_we1,
        centroid_d1,
        cloud_address0,
        cloud_ce0,
        cloud_q0,
        cloud_address1,
        cloud_ce1,
        cloud_q1,
        indices_address0,
        indices_ce0,
        indices_q0,
        indices_address1,
        indices_ce1,
        indices_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 50'd1;
parameter    ap_ST_fsm_state2 = 50'd2;
parameter    ap_ST_fsm_state3 = 50'd4;
parameter    ap_ST_fsm_state4 = 50'd8;
parameter    ap_ST_fsm_state5 = 50'd16;
parameter    ap_ST_fsm_state6 = 50'd32;
parameter    ap_ST_fsm_state7 = 50'd64;
parameter    ap_ST_fsm_state8 = 50'd128;
parameter    ap_ST_fsm_state9 = 50'd256;
parameter    ap_ST_fsm_state10 = 50'd512;
parameter    ap_ST_fsm_state11 = 50'd1024;
parameter    ap_ST_fsm_state12 = 50'd2048;
parameter    ap_ST_fsm_state13 = 50'd4096;
parameter    ap_ST_fsm_state14 = 50'd8192;
parameter    ap_ST_fsm_state15 = 50'd16384;
parameter    ap_ST_fsm_state16 = 50'd32768;
parameter    ap_ST_fsm_state17 = 50'd65536;
parameter    ap_ST_fsm_state18 = 50'd131072;
parameter    ap_ST_fsm_state19 = 50'd262144;
parameter    ap_ST_fsm_state20 = 50'd524288;
parameter    ap_ST_fsm_state21 = 50'd1048576;
parameter    ap_ST_fsm_state22 = 50'd2097152;
parameter    ap_ST_fsm_state23 = 50'd4194304;
parameter    ap_ST_fsm_state24 = 50'd8388608;
parameter    ap_ST_fsm_state25 = 50'd16777216;
parameter    ap_ST_fsm_state26 = 50'd33554432;
parameter    ap_ST_fsm_state27 = 50'd67108864;
parameter    ap_ST_fsm_state28 = 50'd134217728;
parameter    ap_ST_fsm_state29 = 50'd268435456;
parameter    ap_ST_fsm_state30 = 50'd536870912;
parameter    ap_ST_fsm_state31 = 50'd1073741824;
parameter    ap_ST_fsm_state32 = 50'd2147483648;
parameter    ap_ST_fsm_state33 = 50'd4294967296;
parameter    ap_ST_fsm_state34 = 50'd8589934592;
parameter    ap_ST_fsm_state35 = 50'd17179869184;
parameter    ap_ST_fsm_state36 = 50'd34359738368;
parameter    ap_ST_fsm_state37 = 50'd68719476736;
parameter    ap_ST_fsm_state38 = 50'd137438953472;
parameter    ap_ST_fsm_state39 = 50'd274877906944;
parameter    ap_ST_fsm_state40 = 50'd549755813888;
parameter    ap_ST_fsm_state41 = 50'd1099511627776;
parameter    ap_ST_fsm_state42 = 50'd2199023255552;
parameter    ap_ST_fsm_state43 = 50'd4398046511104;
parameter    ap_ST_fsm_state44 = 50'd8796093022208;
parameter    ap_ST_fsm_state45 = 50'd17592186044416;
parameter    ap_ST_fsm_state46 = 50'd35184372088832;
parameter    ap_ST_fsm_state47 = 50'd70368744177664;
parameter    ap_ST_fsm_state48 = 50'd140737488355328;
parameter    ap_ST_fsm_state49 = 50'd281474976710656;
parameter    ap_ST_fsm_state50 = 50'd562949953421312;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] covariance_matrix_address0;
output   covariance_matrix_ce0;
output   covariance_matrix_we0;
output  [31:0] covariance_matrix_d0;
output  [3:0] covariance_matrix_address1;
output   covariance_matrix_ce1;
output   covariance_matrix_we1;
output  [31:0] covariance_matrix_d1;
output  [1:0] centroid_address0;
output   centroid_ce0;
output   centroid_we0;
output  [31:0] centroid_d0;
output  [1:0] centroid_address1;
output   centroid_ce1;
output   centroid_we1;
output  [31:0] centroid_d1;
output  [4:0] cloud_address0;
output   cloud_ce0;
input  [31:0] cloud_q0;
output  [4:0] cloud_address1;
output   cloud_ce1;
input  [31:0] cloud_q1;
output  [2:0] indices_address0;
output   indices_ce0;
input  [31:0] indices_q0;
output  [2:0] indices_address1;
output   indices_ce1;
input  [31:0] indices_q1;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] covariance_matrix_address0;
reg covariance_matrix_ce0;
reg covariance_matrix_we0;
reg[31:0] covariance_matrix_d0;
reg[3:0] covariance_matrix_address1;
reg covariance_matrix_ce1;
reg covariance_matrix_we1;
reg[31:0] covariance_matrix_d1;
reg[1:0] centroid_address0;
reg centroid_ce0;
reg centroid_we0;
reg[31:0] centroid_d0;
reg centroid_ce1;
reg centroid_we1;
reg[4:0] cloud_address0;
reg cloud_ce0;
reg[4:0] cloud_address1;
reg cloud_ce1;
reg[2:0] indices_address0;
reg indices_ce0;
reg[2:0] indices_address1;
reg indices_ce1;

(* fsm_encoding = "none" *) reg   [49:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_620;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state11;
reg   [31:0] reg_626;
reg   [31:0] reg_632;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state10;
wire   [31:0] grp_fu_599_p2;
reg   [31:0] reg_653;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state40;
reg   [31:0] reg_658;
wire    ap_CS_fsm_state41;
reg   [31:0] reg_663;
wire    ap_CS_fsm_state42;
wire   [31:0] grp_fu_578_p2;
reg   [31:0] reg_668;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
reg   [31:0] reg_676;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state47;
wire   [31:0] grp_fu_586_p2;
reg   [31:0] reg_683;
wire    ap_CS_fsm_state16;
reg   [31:0] reg_691;
wire    ap_CS_fsm_state17;
wire   [31:0] accu_q1;
reg   [31:0] reg_698;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state37;
wire   [31:0] accu_q0;
reg   [31:0] reg_707;
reg   [31:0] reg_717;
wire    ap_CS_fsm_state38;
wire   [3:0] indvarinc_fu_727_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_1_fu_738_p2;
wire   [7:0] i_1_fu_750_p2;
reg   [7:0] i_1_reg_1355;
wire    ap_CS_fsm_state3;
reg   [2:0] indices_addr_reg_1360;
wire   [0:0] exitcond1_fu_744_p2;
wire    ap_CS_fsm_state4;
reg   [31:0] tmp_25_reg_1436;
reg   [31:0] tmp_29_reg_1446;
reg   [31:0] tmp_22_reg_1451;
wire    ap_CS_fsm_state15;
reg   [31:0] tmp_26_reg_1457;
wire   [31:0] grp_fu_591_p2;
reg   [31:0] tmp_38_reg_1463;
reg   [31:0] tmp_30_reg_1469;
reg   [31:0] tmp_34_reg_1475;
wire    ap_CS_fsm_state18;
wire   [3:0] i_2_fu_1232_p2;
reg   [3:0] i_2_reg_1484;
wire    ap_CS_fsm_state20;
reg   [3:0] accu_addr_10_reg_1489;
wire   [0:0] exitcond_fu_1226_p2;
reg   [31:0] accu_load_3_reg_1494;
reg   [31:0] accu_load_4_reg_1499;
wire   [31:0] grp_fu_607_p2;
reg   [31:0] tmp_43_reg_1504;
reg   [31:0] accu_load_6_reg_1509;
reg   [31:0] tmp_47_reg_1514;
reg   [31:0] tmp_51_reg_1519;
reg   [3:0] accu_address0;
reg    accu_ce0;
reg    accu_we0;
reg   [31:0] accu_d0;
reg   [3:0] accu_address1;
reg    accu_ce1;
reg    accu_we1;
reg   [31:0] accu_d1;
reg   [3:0] invdar_reg_437;
reg   [31:0] tmp_2_reg_448;
wire    ap_CS_fsm_state19;
reg   [31:0] tmp_3_reg_460;
reg   [31:0] tmp_4_reg_472;
reg   [31:0] tmp_5_reg_484;
reg   [31:0] tmp_6_reg_496;
reg   [31:0] tmp_7_reg_508;
reg   [31:0] tmp_8_reg_520;
reg   [31:0] tmp_9_reg_532;
reg   [31:0] tmp_s_reg_544;
reg   [7:0] i_reg_556;
reg   [3:0] i1_reg_567;
wire    ap_CS_fsm_state36;
wire   [63:0] tmp_fu_733_p1;
wire   [63:0] tmp_10_fu_756_p1;
wire  signed [63:0] tmp_56_cast_fu_783_p1;
wire  signed [63:0] tmp_58_cast_fu_810_p1;
wire  signed [63:0] tmp_60_cast_fu_837_p1;
wire  signed [63:0] tmp_63_cast_fu_870_p1;
wire  signed [63:0] tmp_65_cast_fu_897_p1;
wire  signed [63:0] tmp_68_cast_fu_930_p1;
wire  signed [63:0] tmp_71_cast_fu_963_p1;
wire  signed [63:0] tmp_74_cast_fu_996_p1;
wire  signed [63:0] tmp_77_cast_fu_1029_p1;
wire  signed [63:0] tmp_80_cast_fu_1062_p1;
wire  signed [63:0] tmp_83_cast_fu_1095_p1;
wire  signed [63:0] tmp_86_cast_fu_1128_p1;
wire  signed [63:0] tmp_88_cast_fu_1155_p1;
wire  signed [63:0] tmp_91_cast_fu_1188_p1;
wire  signed [63:0] tmp_94_cast_fu_1221_p1;
wire   [63:0] tmp_53_fu_1238_p1;
wire    ap_CS_fsm_state39;
wire   [31:0] grp_fu_613_p2;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
reg   [31:0] grp_fu_578_p0;
reg   [31:0] grp_fu_578_p1;
wire    ap_CS_fsm_state43;
reg   [31:0] grp_fu_586_p0;
reg   [31:0] grp_fu_586_p1;
reg   [31:0] grp_fu_599_p0;
reg   [31:0] grp_fu_599_p1;
reg   [31:0] grp_fu_607_p0;
reg   [31:0] grp_fu_607_p1;
wire   [3:0] tmp_12_fu_765_p1;
wire   [5:0] p_shl14_cast_fu_769_p3;
wire   [5:0] tmp_11_fu_761_p1;
wire   [5:0] tmp_15_fu_777_p2;
wire   [3:0] tmp_19_fu_792_p1;
wire   [5:0] p_shl13_cast_fu_796_p3;
wire   [5:0] tmp_16_fu_788_p1;
wire   [5:0] tmp_20_fu_804_p2;
wire   [3:0] tmp_24_fu_819_p1;
wire   [5:0] p_shl12_cast_fu_823_p3;
wire   [5:0] tmp_23_fu_815_p1;
wire   [5:0] tmp_27_fu_831_p2;
wire   [3:0] tmp_31_fu_846_p1;
wire   [5:0] p_shl11_cast_fu_850_p3;
wire   [5:0] tmp_28_fu_842_p1;
wire   [5:0] tmp_32_fu_858_p2;
wire   [5:0] tmp_35_fu_864_p2;
wire   [3:0] tmp_39_fu_879_p1;
wire   [5:0] p_shl10_cast_fu_883_p3;
wire   [5:0] tmp_37_fu_875_p1;
wire   [5:0] tmp_55_fu_891_p2;
wire   [3:0] tmp_57_fu_906_p1;
wire   [5:0] p_shl9_cast_fu_910_p3;
wire   [5:0] tmp_56_fu_902_p1;
wire   [5:0] tmp_58_fu_918_p2;
wire   [5:0] tmp_59_fu_924_p2;
wire   [3:0] tmp_61_fu_939_p1;
wire   [5:0] p_shl8_cast_fu_943_p3;
wire   [5:0] tmp_60_fu_935_p1;
wire   [5:0] tmp_62_fu_951_p2;
wire   [5:0] tmp_63_fu_957_p2;
wire   [3:0] tmp_65_fu_972_p1;
wire   [5:0] p_shl7_cast_fu_976_p3;
wire   [5:0] tmp_64_fu_968_p1;
wire   [5:0] tmp_66_fu_984_p2;
wire   [5:0] tmp_67_fu_990_p2;
wire   [3:0] tmp_69_fu_1005_p1;
wire   [5:0] p_shl6_cast_fu_1009_p3;
wire   [5:0] tmp_68_fu_1001_p1;
wire   [5:0] tmp_70_fu_1017_p2;
wire   [5:0] tmp_71_fu_1023_p2;
wire   [3:0] tmp_73_fu_1038_p1;
wire   [5:0] p_shl5_cast_fu_1042_p3;
wire   [5:0] tmp_72_fu_1034_p1;
wire   [5:0] tmp_74_fu_1050_p2;
wire   [5:0] tmp_75_fu_1056_p2;
wire   [3:0] tmp_77_fu_1071_p1;
wire   [5:0] p_shl4_cast_fu_1075_p3;
wire   [5:0] tmp_76_fu_1067_p1;
wire   [5:0] tmp_78_fu_1083_p2;
wire   [5:0] tmp_79_fu_1089_p2;
wire   [3:0] tmp_81_fu_1104_p1;
wire   [5:0] p_shl3_cast_fu_1108_p3;
wire   [5:0] tmp_80_fu_1100_p1;
wire   [5:0] tmp_82_fu_1116_p2;
wire   [5:0] tmp_83_fu_1122_p2;
wire   [3:0] tmp_85_fu_1137_p1;
wire   [5:0] p_shl2_cast_fu_1141_p3;
wire   [5:0] tmp_84_fu_1133_p1;
wire   [5:0] tmp_86_fu_1149_p2;
wire   [3:0] tmp_88_fu_1164_p1;
wire   [5:0] p_shl1_cast_fu_1168_p3;
wire   [5:0] tmp_87_fu_1160_p1;
wire   [5:0] tmp_89_fu_1176_p2;
wire   [5:0] tmp_90_fu_1182_p2;
wire   [3:0] tmp_92_fu_1197_p1;
wire   [5:0] p_shl_cast_fu_1201_p3;
wire   [5:0] tmp_91_fu_1193_p1;
wire   [5:0] tmp_93_fu_1209_p2;
wire   [5:0] tmp_94_fu_1215_p2;
reg   [1:0] grp_fu_578_opcode;
reg   [1:0] grp_fu_586_opcode;
reg   [49:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 50'd1;
end

compute_accu #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
accu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(accu_address0),
    .ce0(accu_ce0),
    .we0(accu_we0),
    .d0(accu_d0),
    .q0(accu_q0),
    .address1(accu_address1),
    .ce1(accu_ce1),
    .we1(accu_we1),
    .d1(accu_d1),
    .q1(accu_q1)
);

compute_faddfsub_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
compute_faddfsub_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_578_p0),
    .din1(grp_fu_578_p1),
    .opcode(grp_fu_578_opcode),
    .ce(1'b1),
    .dout(grp_fu_578_p2)
);

compute_faddfsub_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
compute_faddfsub_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_586_p0),
    .din1(grp_fu_586_p1),
    .opcode(grp_fu_586_opcode),
    .ce(1'b1),
    .dout(grp_fu_586_p2)
);

compute_fadd_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
compute_fadd_32nscud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_460),
    .din1(reg_626),
    .ce(1'b1),
    .dout(grp_fu_591_p2)
);

compute_fmul_32nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
compute_fmul_32nsdEe_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_599_p0),
    .din1(grp_fu_599_p1),
    .ce(1'b1),
    .dout(grp_fu_599_p2)
);

compute_fmul_32nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
compute_fmul_32nsdEe_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_607_p0),
    .din1(grp_fu_607_p1),
    .ce(1'b1),
    .dout(grp_fu_607_p2)
);

compute_fdiv_32nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
compute_fdiv_32nseOg_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(accu_q1),
    .din1(32'd1130299392),
    .ce(1'b1),
    .dout(grp_fu_613_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_744_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_reg_567 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        i1_reg_567 <= i_2_reg_1484;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_reg_556 <= i_1_reg_1355;
    end else if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_556 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_738_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar_reg_437 <= indvarinc_fu_727_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_437 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        reg_707 <= accu_q1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_707 <= accu_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        reg_717 <= accu_q0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        reg_717 <= accu_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_2_reg_448 <= reg_691;
    end else if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_2_reg_448 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_3_reg_460 <= tmp_38_reg_1463;
    end else if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_3_reg_460 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_4_reg_472 <= reg_683;
    end else if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_4_reg_472 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_5_reg_484 <= tmp_34_reg_1475;
    end else if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_5_reg_484 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_6_reg_496 <= tmp_30_reg_1469;
    end else if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_6_reg_496 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_7_reg_508 <= tmp_26_reg_1457;
    end else if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_7_reg_508 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_8_reg_520 <= tmp_22_reg_1451;
    end else if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_8_reg_520 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_9_reg_532 <= reg_676;
    end else if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_9_reg_532 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_s_reg_544 <= reg_668;
    end else if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_s_reg_544 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        accu_addr_10_reg_1489 <= tmp_53_fu_1238_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        accu_load_3_reg_1494 <= accu_q1;
        accu_load_4_reg_1499 <= accu_q0;
        tmp_43_reg_1504 <= grp_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        accu_load_6_reg_1509 <= accu_q0;
        tmp_47_reg_1514 <= grp_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_1_reg_1355 <= i_1_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_2_reg_1484 <= i_2_fu_1232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_744_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        indices_addr_reg_1360 <= tmp_10_fu_756_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_620 <= cloud_q0;
        reg_626 <= cloud_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_632 <= cloud_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_653 <= grp_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_658 <= grp_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_663 <= grp_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_668 <= grp_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_676 <= grp_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state45))) begin
        reg_683 <= grp_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46))) begin
        reg_691 <= grp_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state41))) begin
        reg_698 <= accu_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_22_reg_1451 <= grp_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_25_reg_1436 <= grp_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_26_reg_1457 <= grp_fu_578_p2;
        tmp_38_reg_1463 <= grp_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_29_reg_1446 <= grp_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_30_reg_1469 <= grp_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_34_reg_1475 <= grp_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        tmp_51_reg_1519 <= grp_fu_607_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        accu_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        accu_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state41))) begin
        accu_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        accu_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        accu_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        accu_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state15))) begin
        accu_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        accu_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        accu_address0 = tmp_fu_733_p1;
    end else begin
        accu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        accu_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        accu_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        accu_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        accu_address1 = accu_addr_10_reg_1489;
    end else if (((exitcond_fu_1226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        accu_address1 = 64'd6;
    end else if (((exitcond_fu_1226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        accu_address1 = tmp_53_fu_1238_p1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state41))) begin
        accu_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        accu_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        accu_address1 = 64'd7;
    end else begin
        accu_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        accu_ce0 = 1'b1;
    end else begin
        accu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | ((exitcond_fu_1226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((exitcond_fu_1226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        accu_ce1 = 1'b1;
    end else begin
        accu_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        accu_d0 = tmp_34_reg_1475;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        accu_d0 = reg_691;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        accu_d0 = reg_683;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        accu_d0 = tmp_22_reg_1451;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        accu_d0 = reg_676;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        accu_d0 = reg_668;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        accu_d0 = 32'd0;
    end else begin
        accu_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        accu_d1 = grp_fu_613_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        accu_d1 = tmp_30_reg_1469;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        accu_d1 = tmp_26_reg_1457;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        accu_d1 = tmp_38_reg_1463;
    end else begin
        accu_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14))) begin
        accu_we0 = 1'b1;
    end else begin
        accu_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        accu_we1 = 1'b1;
    end else begin
        accu_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        centroid_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        centroid_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        centroid_address0 = 64'd0;
    end else begin
        centroid_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37))) begin
        centroid_ce0 = 1'b1;
    end else begin
        centroid_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        centroid_ce1 = 1'b1;
    end else begin
        centroid_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        centroid_d0 = reg_707;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        centroid_d0 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        centroid_d0 = accu_q1;
    end else begin
        centroid_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37))) begin
        centroid_we0 = 1'b1;
    end else begin
        centroid_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        centroid_we1 = 1'b1;
    end else begin
        centroid_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        cloud_address0 = tmp_94_cast_fu_1221_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        cloud_address0 = tmp_88_cast_fu_1155_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        cloud_address0 = tmp_83_cast_fu_1095_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        cloud_address0 = tmp_77_cast_fu_1029_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        cloud_address0 = tmp_71_cast_fu_963_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        cloud_address0 = tmp_65_cast_fu_897_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        cloud_address0 = tmp_60_cast_fu_837_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        cloud_address0 = tmp_56_cast_fu_783_p1;
    end else begin
        cloud_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cloud_address1 = tmp_91_cast_fu_1188_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        cloud_address1 = tmp_86_cast_fu_1128_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        cloud_address1 = tmp_80_cast_fu_1062_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        cloud_address1 = tmp_74_cast_fu_996_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        cloud_address1 = tmp_68_cast_fu_930_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        cloud_address1 = tmp_63_cast_fu_870_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        cloud_address1 = tmp_58_cast_fu_810_p1;
    end else begin
        cloud_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        cloud_ce0 = 1'b1;
    end else begin
        cloud_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        cloud_ce1 = 1'b1;
    end else begin
        cloud_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        covariance_matrix_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        covariance_matrix_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        covariance_matrix_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        covariance_matrix_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        covariance_matrix_address0 = 64'd0;
    end else begin
        covariance_matrix_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        covariance_matrix_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        covariance_matrix_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        covariance_matrix_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        covariance_matrix_address1 = 64'd1;
    end else begin
        covariance_matrix_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46))) begin
        covariance_matrix_ce0 = 1'b1;
    end else begin
        covariance_matrix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46))) begin
        covariance_matrix_ce1 = 1'b1;
    end else begin
        covariance_matrix_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        covariance_matrix_d0 = reg_683;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48))) begin
        covariance_matrix_d0 = reg_676;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46))) begin
        covariance_matrix_d0 = reg_668;
    end else begin
        covariance_matrix_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        covariance_matrix_d1 = reg_668;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47))) begin
        covariance_matrix_d1 = reg_691;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        covariance_matrix_d1 = reg_683;
    end else begin
        covariance_matrix_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46))) begin
        covariance_matrix_we0 = 1'b1;
    end else begin
        covariance_matrix_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46))) begin
        covariance_matrix_we1 = 1'b1;
    end else begin
        covariance_matrix_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_578_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_578_opcode = 2'd0;
    end else begin
        grp_fu_578_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_578_p0 = reg_707;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_578_p0 = reg_698;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_578_p0 = accu_load_3_reg_1494;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_578_p0 = tmp_5_reg_484;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_578_p0 = tmp_6_reg_496;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_578_p0 = tmp_7_reg_508;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_578_p0 = tmp_8_reg_520;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_578_p0 = tmp_9_reg_532;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_578_p0 = tmp_s_reg_544;
    end else begin
        grp_fu_578_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_578_p1 = tmp_29_reg_1446;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_578_p1 = tmp_25_reg_1436;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_fu_578_p1 = reg_663;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_578_p1 = reg_658;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_578_p1 = reg_653;
    end else begin
        grp_fu_578_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_586_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_586_opcode = 2'd0;
    end else begin
        grp_fu_586_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_586_p0 = reg_717;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_586_p0 = accu_load_6_reg_1509;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_586_p0 = accu_load_4_reg_1499;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_586_p0 = tmp_2_reg_448;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_586_p0 = tmp_4_reg_472;
    end else begin
        grp_fu_586_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_586_p1 = tmp_51_reg_1519;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_586_p1 = tmp_47_reg_1514;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_586_p1 = tmp_43_reg_1504;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_586_p1 = reg_632;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_586_p1 = reg_620;
    end else begin
        grp_fu_586_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_599_p0 = reg_707;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_599_p0 = reg_698;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_599_p0 = accu_q1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_599_p0 = cloud_q0;
    end else begin
        grp_fu_599_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_599_p1 = reg_717;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_599_p1 = accu_q1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_599_p1 = cloud_q1;
    end else begin
        grp_fu_599_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_607_p0 = reg_717;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_607_p0 = reg_707;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_607_p0 = accu_q1;
    end else begin
        grp_fu_607_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_607_p1 = reg_717;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_607_p1 = reg_707;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_607_p1 = accu_q0;
    end else begin
        grp_fu_607_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        indices_address0 = indices_addr_reg_1360;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indices_address0 = tmp_10_fu_756_p1;
    end else begin
        indices_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        indices_address1 = indices_addr_reg_1360;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indices_address1 = tmp_10_fu_756_p1;
    end else begin
        indices_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        indices_ce0 = 1'b1;
    end else begin
        indices_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        indices_ce1 = 1'b1;
    end else begin
        indices_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_1_fu_738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond1_fu_744_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state20 : begin
            if (((exitcond_fu_1226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = 32'd0;

assign centroid_address1 = 64'd2;

assign centroid_d1 = reg_717;

assign exitcond1_fu_744_p2 = ((i_reg_556 == 8'd223) ? 1'b1 : 1'b0);

assign exitcond_fu_1226_p2 = ((i1_reg_567 == 4'd9) ? 1'b1 : 1'b0);

assign i_1_fu_750_p2 = (i_reg_556 + 8'd1);

assign i_2_fu_1232_p2 = (i1_reg_567 + 4'd1);

assign indvarinc_fu_727_p2 = (invdar_reg_437 + 4'd1);

assign p_shl10_cast_fu_883_p3 = {{tmp_39_fu_879_p1}, {2'd0}};

assign p_shl11_cast_fu_850_p3 = {{tmp_31_fu_846_p1}, {2'd0}};

assign p_shl12_cast_fu_823_p3 = {{tmp_24_fu_819_p1}, {2'd0}};

assign p_shl13_cast_fu_796_p3 = {{tmp_19_fu_792_p1}, {2'd0}};

assign p_shl14_cast_fu_769_p3 = {{tmp_12_fu_765_p1}, {2'd0}};

assign p_shl1_cast_fu_1168_p3 = {{tmp_88_fu_1164_p1}, {2'd0}};

assign p_shl2_cast_fu_1141_p3 = {{tmp_85_fu_1137_p1}, {2'd0}};

assign p_shl3_cast_fu_1108_p3 = {{tmp_81_fu_1104_p1}, {2'd0}};

assign p_shl4_cast_fu_1075_p3 = {{tmp_77_fu_1071_p1}, {2'd0}};

assign p_shl5_cast_fu_1042_p3 = {{tmp_73_fu_1038_p1}, {2'd0}};

assign p_shl6_cast_fu_1009_p3 = {{tmp_69_fu_1005_p1}, {2'd0}};

assign p_shl7_cast_fu_976_p3 = {{tmp_65_fu_972_p1}, {2'd0}};

assign p_shl8_cast_fu_943_p3 = {{tmp_61_fu_939_p1}, {2'd0}};

assign p_shl9_cast_fu_910_p3 = {{tmp_57_fu_906_p1}, {2'd0}};

assign p_shl_cast_fu_1201_p3 = {{tmp_92_fu_1197_p1}, {2'd0}};

assign tmp_10_fu_756_p1 = i_reg_556;

assign tmp_11_fu_761_p1 = indices_q0[5:0];

assign tmp_12_fu_765_p1 = indices_q0[3:0];

assign tmp_15_fu_777_p2 = (p_shl14_cast_fu_769_p3 - tmp_11_fu_761_p1);

assign tmp_16_fu_788_p1 = indices_q1[5:0];

assign tmp_19_fu_792_p1 = indices_q1[3:0];

assign tmp_1_fu_738_p2 = ((invdar_reg_437 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_20_fu_804_p2 = (p_shl13_cast_fu_796_p3 - tmp_16_fu_788_p1);

assign tmp_23_fu_815_p1 = indices_q0[5:0];

assign tmp_24_fu_819_p1 = indices_q0[3:0];

assign tmp_27_fu_831_p2 = (p_shl12_cast_fu_823_p3 - tmp_23_fu_815_p1);

assign tmp_28_fu_842_p1 = indices_q1[5:0];

assign tmp_31_fu_846_p1 = indices_q1[3:0];

assign tmp_32_fu_858_p2 = (p_shl11_cast_fu_850_p3 - tmp_28_fu_842_p1);

assign tmp_35_fu_864_p2 = (6'd1 + tmp_32_fu_858_p2);

assign tmp_37_fu_875_p1 = indices_q0[5:0];

assign tmp_39_fu_879_p1 = indices_q0[3:0];

assign tmp_53_fu_1238_p1 = i1_reg_567;

assign tmp_55_fu_891_p2 = (p_shl10_cast_fu_883_p3 - tmp_37_fu_875_p1);

assign tmp_56_cast_fu_783_p1 = $signed(tmp_15_fu_777_p2);

assign tmp_56_fu_902_p1 = indices_q1[5:0];

assign tmp_57_fu_906_p1 = indices_q1[3:0];

assign tmp_58_cast_fu_810_p1 = $signed(tmp_20_fu_804_p2);

assign tmp_58_fu_918_p2 = (p_shl9_cast_fu_910_p3 - tmp_56_fu_902_p1);

assign tmp_59_fu_924_p2 = (6'd2 + tmp_58_fu_918_p2);

assign tmp_60_cast_fu_837_p1 = $signed(tmp_27_fu_831_p2);

assign tmp_60_fu_935_p1 = indices_q0[5:0];

assign tmp_61_fu_939_p1 = indices_q0[3:0];

assign tmp_62_fu_951_p2 = (p_shl8_cast_fu_943_p3 - tmp_60_fu_935_p1);

assign tmp_63_cast_fu_870_p1 = $signed(tmp_35_fu_864_p2);

assign tmp_63_fu_957_p2 = (6'd1 + tmp_62_fu_951_p2);

assign tmp_64_fu_968_p1 = indices_q1[5:0];

assign tmp_65_cast_fu_897_p1 = $signed(tmp_55_fu_891_p2);

assign tmp_65_fu_972_p1 = indices_q1[3:0];

assign tmp_66_fu_984_p2 = (p_shl7_cast_fu_976_p3 - tmp_64_fu_968_p1);

assign tmp_67_fu_990_p2 = (6'd1 + tmp_66_fu_984_p2);

assign tmp_68_cast_fu_930_p1 = $signed(tmp_59_fu_924_p2);

assign tmp_68_fu_1001_p1 = indices_q0[5:0];

assign tmp_69_fu_1005_p1 = indices_q0[3:0];

assign tmp_70_fu_1017_p2 = (p_shl6_cast_fu_1009_p3 - tmp_68_fu_1001_p1);

assign tmp_71_cast_fu_963_p1 = $signed(tmp_63_fu_957_p2);

assign tmp_71_fu_1023_p2 = (6'd1 + tmp_70_fu_1017_p2);

assign tmp_72_fu_1034_p1 = indices_q1[5:0];

assign tmp_73_fu_1038_p1 = indices_q1[3:0];

assign tmp_74_cast_fu_996_p1 = $signed(tmp_67_fu_990_p2);

assign tmp_74_fu_1050_p2 = (p_shl5_cast_fu_1042_p3 - tmp_72_fu_1034_p1);

assign tmp_75_fu_1056_p2 = (6'd2 + tmp_74_fu_1050_p2);

assign tmp_76_fu_1067_p1 = indices_q0[5:0];

assign tmp_77_cast_fu_1029_p1 = $signed(tmp_71_fu_1023_p2);

assign tmp_77_fu_1071_p1 = indices_q0[3:0];

assign tmp_78_fu_1083_p2 = (p_shl4_cast_fu_1075_p3 - tmp_76_fu_1067_p1);

assign tmp_79_fu_1089_p2 = (6'd2 + tmp_78_fu_1083_p2);

assign tmp_80_cast_fu_1062_p1 = $signed(tmp_75_fu_1056_p2);

assign tmp_80_fu_1100_p1 = indices_q1[5:0];

assign tmp_81_fu_1104_p1 = indices_q1[3:0];

assign tmp_82_fu_1116_p2 = (p_shl3_cast_fu_1108_p3 - tmp_80_fu_1100_p1);

assign tmp_83_cast_fu_1095_p1 = $signed(tmp_79_fu_1089_p2);

assign tmp_83_fu_1122_p2 = (6'd2 + tmp_82_fu_1116_p2);

assign tmp_84_fu_1133_p1 = indices_q0[5:0];

assign tmp_85_fu_1137_p1 = indices_q0[3:0];

assign tmp_86_cast_fu_1128_p1 = $signed(tmp_83_fu_1122_p2);

assign tmp_86_fu_1149_p2 = (p_shl2_cast_fu_1141_p3 - tmp_84_fu_1133_p1);

assign tmp_87_fu_1160_p1 = indices_q1[5:0];

assign tmp_88_cast_fu_1155_p1 = $signed(tmp_86_fu_1149_p2);

assign tmp_88_fu_1164_p1 = indices_q1[3:0];

assign tmp_89_fu_1176_p2 = (p_shl1_cast_fu_1168_p3 - tmp_87_fu_1160_p1);

assign tmp_90_fu_1182_p2 = (6'd1 + tmp_89_fu_1176_p2);

assign tmp_91_cast_fu_1188_p1 = $signed(tmp_90_fu_1182_p2);

assign tmp_91_fu_1193_p1 = indices_q0[5:0];

assign tmp_92_fu_1197_p1 = indices_q0[3:0];

assign tmp_93_fu_1209_p2 = (p_shl_cast_fu_1201_p3 - tmp_91_fu_1193_p1);

assign tmp_94_cast_fu_1221_p1 = $signed(tmp_94_fu_1215_p2);

assign tmp_94_fu_1215_p2 = (6'd2 + tmp_93_fu_1209_p2);

assign tmp_fu_733_p1 = invdar_reg_437;

endmodule //compute
