// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "compute.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic compute::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic compute::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<50> compute::ap_ST_fsm_state1 = "1";
const sc_lv<50> compute::ap_ST_fsm_state2 = "10";
const sc_lv<50> compute::ap_ST_fsm_state3 = "100";
const sc_lv<50> compute::ap_ST_fsm_state4 = "1000";
const sc_lv<50> compute::ap_ST_fsm_state5 = "10000";
const sc_lv<50> compute::ap_ST_fsm_state6 = "100000";
const sc_lv<50> compute::ap_ST_fsm_state7 = "1000000";
const sc_lv<50> compute::ap_ST_fsm_state8 = "10000000";
const sc_lv<50> compute::ap_ST_fsm_state9 = "100000000";
const sc_lv<50> compute::ap_ST_fsm_state10 = "1000000000";
const sc_lv<50> compute::ap_ST_fsm_state11 = "10000000000";
const sc_lv<50> compute::ap_ST_fsm_state12 = "100000000000";
const sc_lv<50> compute::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<50> compute::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<50> compute::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<50> compute::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<50> compute::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<32> compute::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> compute::ap_const_lv32_4 = "100";
const sc_lv<32> compute::ap_const_lv32_7 = "111";
const sc_lv<32> compute::ap_const_lv32_A = "1010";
const sc_lv<32> compute::ap_const_lv32_5 = "101";
const sc_lv<32> compute::ap_const_lv32_8 = "1000";
const sc_lv<32> compute::ap_const_lv32_B = "1011";
const sc_lv<32> compute::ap_const_lv32_6 = "110";
const sc_lv<32> compute::ap_const_lv32_9 = "1001";
const sc_lv<32> compute::ap_const_lv32_C = "1100";
const sc_lv<32> compute::ap_const_lv32_27 = "100111";
const sc_lv<32> compute::ap_const_lv32_28 = "101000";
const sc_lv<32> compute::ap_const_lv32_29 = "101001";
const sc_lv<32> compute::ap_const_lv32_2C = "101100";
const sc_lv<32> compute::ap_const_lv32_2D = "101101";
const sc_lv<32> compute::ap_const_lv32_D = "1101";
const sc_lv<32> compute::ap_const_lv32_2E = "101110";
const sc_lv<32> compute::ap_const_lv32_F = "1111";
const sc_lv<32> compute::ap_const_lv32_10 = "10000";
const sc_lv<32> compute::ap_const_lv32_14 = "10100";
const sc_lv<32> compute::ap_const_lv32_24 = "100100";
const sc_lv<32> compute::ap_const_lv32_25 = "100101";
const sc_lv<32> compute::ap_const_lv32_1 = "1";
const sc_lv<1> compute::ap_const_lv1_1 = "1";
const sc_lv<32> compute::ap_const_lv32_2 = "10";
const sc_lv<1> compute::ap_const_lv1_0 = "0";
const sc_lv<32> compute::ap_const_lv32_3 = "11";
const sc_lv<32> compute::ap_const_lv32_E = "1110";
const sc_lv<32> compute::ap_const_lv32_11 = "10001";
const sc_lv<32> compute::ap_const_lv32_13 = "10011";
const sc_lv<4> compute::ap_const_lv4_0 = "0000";
const sc_lv<32> compute::ap_const_lv32_12 = "10010";
const sc_lv<3> compute::ap_const_lv3_0 = "000";
const sc_lv<32> compute::ap_const_lv32_23 = "100011";
const sc_lv<64> compute::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> compute::ap_const_lv64_1 = "1";
const sc_lv<64> compute::ap_const_lv64_2 = "10";
const sc_lv<64> compute::ap_const_lv64_4 = "100";
const sc_lv<64> compute::ap_const_lv64_5 = "101";
const sc_lv<64> compute::ap_const_lv64_8 = "1000";
const sc_lv<64> compute::ap_const_lv64_3 = "11";
const sc_lv<64> compute::ap_const_lv64_6 = "110";
const sc_lv<64> compute::ap_const_lv64_7 = "111";
const sc_lv<32> compute::ap_const_lv32_26 = "100110";
const sc_lv<32> compute::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> compute::ap_const_lv32_2F = "101111";
const sc_lv<32> compute::ap_const_lv32_30 = "110000";
const sc_lv<32> compute::ap_const_lv32_31 = "110001";
const sc_lv<32> compute::ap_const_lv32_2A = "101010";
const sc_lv<32> compute::ap_const_lv32_41200000 = "1000001001000000000000000000000";
const sc_lv<4> compute::ap_const_lv4_1 = "1";
const sc_lv<4> compute::ap_const_lv4_8 = "1000";
const sc_lv<3> compute::ap_const_lv3_5 = "101";
const sc_lv<3> compute::ap_const_lv3_1 = "1";
const sc_lv<2> compute::ap_const_lv2_0 = "00";
const sc_lv<6> compute::ap_const_lv6_1 = "1";
const sc_lv<6> compute::ap_const_lv6_2 = "10";
const sc_lv<4> compute::ap_const_lv4_9 = "1001";
const sc_lv<2> compute::ap_const_lv2_1 = "1";
const bool compute::ap_const_boolean_1 = true;

compute::compute(sc_module_name name) : sc_module(name), mVcdFile(0) {
    accu_U = new compute_accu("accu_U");
    accu_U->clk(ap_clk);
    accu_U->reset(ap_rst);
    accu_U->address0(accu_address0);
    accu_U->ce0(accu_ce0);
    accu_U->we0(accu_we0);
    accu_U->d0(accu_d0);
    accu_U->q0(accu_q0);
    accu_U->address1(accu_address1);
    accu_U->ce1(accu_ce1);
    accu_U->we1(accu_we1);
    accu_U->d1(accu_d1);
    accu_U->q1(accu_q1);
    compute_faddfsub_bkb_U1 = new compute_faddfsub_bkb<1,5,32,32,32>("compute_faddfsub_bkb_U1");
    compute_faddfsub_bkb_U1->clk(ap_clk);
    compute_faddfsub_bkb_U1->reset(ap_rst);
    compute_faddfsub_bkb_U1->din0(grp_fu_576_p0);
    compute_faddfsub_bkb_U1->din1(grp_fu_576_p1);
    compute_faddfsub_bkb_U1->opcode(grp_fu_576_opcode);
    compute_faddfsub_bkb_U1->ce(ap_var_for_const0);
    compute_faddfsub_bkb_U1->dout(grp_fu_576_p2);
    compute_faddfsub_bkb_U2 = new compute_faddfsub_bkb<1,5,32,32,32>("compute_faddfsub_bkb_U2");
    compute_faddfsub_bkb_U2->clk(ap_clk);
    compute_faddfsub_bkb_U2->reset(ap_rst);
    compute_faddfsub_bkb_U2->din0(grp_fu_584_p0);
    compute_faddfsub_bkb_U2->din1(grp_fu_584_p1);
    compute_faddfsub_bkb_U2->opcode(grp_fu_584_opcode);
    compute_faddfsub_bkb_U2->ce(ap_var_for_const0);
    compute_faddfsub_bkb_U2->dout(grp_fu_584_p2);
    compute_fadd_32nscud_U3 = new compute_fadd_32nscud<1,5,32,32,32>("compute_fadd_32nscud_U3");
    compute_fadd_32nscud_U3->clk(ap_clk);
    compute_fadd_32nscud_U3->reset(ap_rst);
    compute_fadd_32nscud_U3->din0(tmp_3_reg_458);
    compute_fadd_32nscud_U3->din1(reg_624);
    compute_fadd_32nscud_U3->ce(ap_var_for_const0);
    compute_fadd_32nscud_U3->dout(grp_fu_589_p2);
    compute_fmul_32nsdEe_U4 = new compute_fmul_32nsdEe<1,4,32,32,32>("compute_fmul_32nsdEe_U4");
    compute_fmul_32nsdEe_U4->clk(ap_clk);
    compute_fmul_32nsdEe_U4->reset(ap_rst);
    compute_fmul_32nsdEe_U4->din0(grp_fu_597_p0);
    compute_fmul_32nsdEe_U4->din1(grp_fu_597_p1);
    compute_fmul_32nsdEe_U4->ce(ap_var_for_const0);
    compute_fmul_32nsdEe_U4->dout(grp_fu_597_p2);
    compute_fmul_32nsdEe_U5 = new compute_fmul_32nsdEe<1,4,32,32,32>("compute_fmul_32nsdEe_U5");
    compute_fmul_32nsdEe_U5->clk(ap_clk);
    compute_fmul_32nsdEe_U5->reset(ap_rst);
    compute_fmul_32nsdEe_U5->din0(grp_fu_605_p0);
    compute_fmul_32nsdEe_U5->din1(grp_fu_605_p1);
    compute_fmul_32nsdEe_U5->ce(ap_var_for_const0);
    compute_fmul_32nsdEe_U5->dout(grp_fu_605_p2);
    compute_fdiv_32nseOg_U6 = new compute_fdiv_32nseOg<1,16,32,32,32>("compute_fdiv_32nseOg_U6");
    compute_fdiv_32nseOg_U6->clk(ap_clk);
    compute_fdiv_32nseOg_U6->reset(ap_rst);
    compute_fdiv_32nseOg_U6->din0(accu_q1);
    compute_fdiv_32nseOg_U6->din1(ap_var_for_const1);
    compute_fdiv_32nseOg_U6->ce(ap_var_for_const0);
    compute_fdiv_32nseOg_U6->dout(grp_fu_611_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_accu_address0);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_fu_731_p1 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_accu_address1);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( accu_addr_10_reg_1487 );
    sensitive << ( exitcond_fu_1224_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( tmp_53_fu_1236_p1 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_accu_ce0);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_accu_ce1);
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( exitcond_fu_1224_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_accu_d0);
    sensitive << ( reg_666 );
    sensitive << ( reg_674 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( reg_681 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( reg_689 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_22_reg_1449 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_34_reg_1473 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_accu_d1);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_26_reg_1455 );
    sensitive << ( tmp_38_reg_1461 );
    sensitive << ( tmp_30_reg_1467 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( grp_fu_611_p2 );

    SC_METHOD(thread_accu_we0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_accu_we1);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_centroid_address0);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_centroid_address1);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_centroid_ce0);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_centroid_ce1);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_centroid_d0);
    sensitive << ( accu_q1 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( reg_705 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_centroid_d1);
    sensitive << ( reg_715 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_centroid_we0);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_centroid_we1);
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_cloud_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_56_cast_fu_781_p1 );
    sensitive << ( tmp_60_cast_fu_835_p1 );
    sensitive << ( tmp_65_cast_fu_895_p1 );
    sensitive << ( tmp_71_cast_fu_961_p1 );
    sensitive << ( tmp_77_cast_fu_1027_p1 );
    sensitive << ( tmp_83_cast_fu_1093_p1 );
    sensitive << ( tmp_88_cast_fu_1153_p1 );
    sensitive << ( tmp_94_cast_fu_1219_p1 );

    SC_METHOD(thread_cloud_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_58_cast_fu_808_p1 );
    sensitive << ( tmp_63_cast_fu_868_p1 );
    sensitive << ( tmp_68_cast_fu_928_p1 );
    sensitive << ( tmp_74_cast_fu_994_p1 );
    sensitive << ( tmp_80_cast_fu_1060_p1 );
    sensitive << ( tmp_86_cast_fu_1126_p1 );
    sensitive << ( tmp_91_cast_fu_1186_p1 );

    SC_METHOD(thread_cloud_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_cloud_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_covariance_matrix_address0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_covariance_matrix_address1);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_covariance_matrix_ce0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_covariance_matrix_ce1);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_covariance_matrix_d0);
    sensitive << ( reg_666 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( reg_674 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( reg_681 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_covariance_matrix_d1);
    sensitive << ( reg_666 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( reg_681 );
    sensitive << ( reg_689 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_covariance_matrix_we0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_covariance_matrix_we1);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_exitcond1_fu_742_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_554 );

    SC_METHOD(thread_exitcond_fu_1224_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( i1_reg_565 );

    SC_METHOD(thread_grp_fu_576_opcode);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_576_p0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( reg_696 );
    sensitive << ( reg_705 );
    sensitive << ( accu_load_3_reg_1492 );
    sensitive << ( tmp_5_reg_482 );
    sensitive << ( tmp_6_reg_494 );
    sensitive << ( tmp_7_reg_506 );
    sensitive << ( tmp_8_reg_518 );
    sensitive << ( tmp_9_reg_530 );
    sensitive << ( tmp_s_reg_542 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_576_p1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( reg_651 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( reg_656 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( reg_661 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_25_reg_1434 );
    sensitive << ( tmp_29_reg_1444 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_584_opcode);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_584_p0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( reg_715 );
    sensitive << ( accu_load_4_reg_1497 );
    sensitive << ( accu_load_6_reg_1507 );
    sensitive << ( tmp_2_reg_446 );
    sensitive << ( tmp_4_reg_470 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_584_p1);
    sensitive << ( reg_618 );
    sensitive << ( reg_630 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( tmp_43_reg_1502 );
    sensitive << ( tmp_47_reg_1512 );
    sensitive << ( tmp_51_reg_1517 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_597_p0);
    sensitive << ( cloud_q0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( accu_q1 );
    sensitive << ( reg_696 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( reg_705 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_grp_fu_597_p1);
    sensitive << ( cloud_q1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( accu_q1 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( reg_715 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_grp_fu_605_p0);
    sensitive << ( accu_q1 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( reg_705 );
    sensitive << ( reg_715 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_grp_fu_605_p1);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( accu_q0 );
    sensitive << ( reg_705 );
    sensitive << ( reg_715 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_i_1_fu_748_p2);
    sensitive << ( i_reg_554 );

    SC_METHOD(thread_i_2_fu_1230_p2);
    sensitive << ( i1_reg_565 );

    SC_METHOD(thread_indices_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( indices_addr_reg_1358 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_10_fu_754_p1 );

    SC_METHOD(thread_indices_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( indices_addr_reg_1358 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_10_fu_754_p1 );

    SC_METHOD(thread_indices_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_indices_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_indvarinc_fu_725_p2);
    sensitive << ( invdar_reg_435 );

    SC_METHOD(thread_p_shl10_cast_fu_881_p3);
    sensitive << ( tmp_39_fu_877_p1 );

    SC_METHOD(thread_p_shl11_cast_fu_848_p3);
    sensitive << ( tmp_31_fu_844_p1 );

    SC_METHOD(thread_p_shl12_cast_fu_821_p3);
    sensitive << ( tmp_24_fu_817_p1 );

    SC_METHOD(thread_p_shl13_cast_fu_794_p3);
    sensitive << ( tmp_19_fu_790_p1 );

    SC_METHOD(thread_p_shl14_cast_fu_767_p3);
    sensitive << ( tmp_12_fu_763_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_1166_p3);
    sensitive << ( tmp_88_fu_1162_p1 );

    SC_METHOD(thread_p_shl2_cast_fu_1139_p3);
    sensitive << ( tmp_85_fu_1135_p1 );

    SC_METHOD(thread_p_shl3_cast_fu_1106_p3);
    sensitive << ( tmp_81_fu_1102_p1 );

    SC_METHOD(thread_p_shl4_cast_fu_1073_p3);
    sensitive << ( tmp_77_fu_1069_p1 );

    SC_METHOD(thread_p_shl5_cast_fu_1040_p3);
    sensitive << ( tmp_73_fu_1036_p1 );

    SC_METHOD(thread_p_shl6_cast_fu_1007_p3);
    sensitive << ( tmp_69_fu_1003_p1 );

    SC_METHOD(thread_p_shl7_cast_fu_974_p3);
    sensitive << ( tmp_65_fu_970_p1 );

    SC_METHOD(thread_p_shl8_cast_fu_941_p3);
    sensitive << ( tmp_61_fu_937_p1 );

    SC_METHOD(thread_p_shl9_cast_fu_908_p3);
    sensitive << ( tmp_57_fu_904_p1 );

    SC_METHOD(thread_p_shl_cast_fu_1199_p3);
    sensitive << ( tmp_92_fu_1195_p1 );

    SC_METHOD(thread_tmp_10_fu_754_p1);
    sensitive << ( i_reg_554 );

    SC_METHOD(thread_tmp_11_fu_759_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_12_fu_763_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_15_fu_775_p2);
    sensitive << ( p_shl14_cast_fu_767_p3 );
    sensitive << ( tmp_11_fu_759_p1 );

    SC_METHOD(thread_tmp_16_fu_786_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_19_fu_790_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_1_fu_736_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( invdar_reg_435 );

    SC_METHOD(thread_tmp_20_fu_802_p2);
    sensitive << ( p_shl13_cast_fu_794_p3 );
    sensitive << ( tmp_16_fu_786_p1 );

    SC_METHOD(thread_tmp_23_fu_813_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_24_fu_817_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_27_fu_829_p2);
    sensitive << ( p_shl12_cast_fu_821_p3 );
    sensitive << ( tmp_23_fu_813_p1 );

    SC_METHOD(thread_tmp_28_fu_840_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_31_fu_844_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_32_fu_856_p2);
    sensitive << ( p_shl11_cast_fu_848_p3 );
    sensitive << ( tmp_28_fu_840_p1 );

    SC_METHOD(thread_tmp_35_fu_862_p2);
    sensitive << ( tmp_32_fu_856_p2 );

    SC_METHOD(thread_tmp_37_fu_873_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_39_fu_877_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_53_fu_1236_p1);
    sensitive << ( i1_reg_565 );

    SC_METHOD(thread_tmp_55_fu_889_p2);
    sensitive << ( p_shl10_cast_fu_881_p3 );
    sensitive << ( tmp_37_fu_873_p1 );

    SC_METHOD(thread_tmp_56_cast_fu_781_p1);
    sensitive << ( tmp_15_fu_775_p2 );

    SC_METHOD(thread_tmp_56_fu_900_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_57_fu_904_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_58_cast_fu_808_p1);
    sensitive << ( tmp_20_fu_802_p2 );

    SC_METHOD(thread_tmp_58_fu_916_p2);
    sensitive << ( p_shl9_cast_fu_908_p3 );
    sensitive << ( tmp_56_fu_900_p1 );

    SC_METHOD(thread_tmp_59_fu_922_p2);
    sensitive << ( tmp_58_fu_916_p2 );

    SC_METHOD(thread_tmp_60_cast_fu_835_p1);
    sensitive << ( tmp_27_fu_829_p2 );

    SC_METHOD(thread_tmp_60_fu_933_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_61_fu_937_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_62_fu_949_p2);
    sensitive << ( p_shl8_cast_fu_941_p3 );
    sensitive << ( tmp_60_fu_933_p1 );

    SC_METHOD(thread_tmp_63_cast_fu_868_p1);
    sensitive << ( tmp_35_fu_862_p2 );

    SC_METHOD(thread_tmp_63_fu_955_p2);
    sensitive << ( tmp_62_fu_949_p2 );

    SC_METHOD(thread_tmp_64_fu_966_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_65_cast_fu_895_p1);
    sensitive << ( tmp_55_fu_889_p2 );

    SC_METHOD(thread_tmp_65_fu_970_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_66_fu_982_p2);
    sensitive << ( p_shl7_cast_fu_974_p3 );
    sensitive << ( tmp_64_fu_966_p1 );

    SC_METHOD(thread_tmp_67_fu_988_p2);
    sensitive << ( tmp_66_fu_982_p2 );

    SC_METHOD(thread_tmp_68_cast_fu_928_p1);
    sensitive << ( tmp_59_fu_922_p2 );

    SC_METHOD(thread_tmp_68_fu_999_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_69_fu_1003_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_70_fu_1015_p2);
    sensitive << ( p_shl6_cast_fu_1007_p3 );
    sensitive << ( tmp_68_fu_999_p1 );

    SC_METHOD(thread_tmp_71_cast_fu_961_p1);
    sensitive << ( tmp_63_fu_955_p2 );

    SC_METHOD(thread_tmp_71_fu_1021_p2);
    sensitive << ( tmp_70_fu_1015_p2 );

    SC_METHOD(thread_tmp_72_fu_1032_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_73_fu_1036_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_74_cast_fu_994_p1);
    sensitive << ( tmp_67_fu_988_p2 );

    SC_METHOD(thread_tmp_74_fu_1048_p2);
    sensitive << ( p_shl5_cast_fu_1040_p3 );
    sensitive << ( tmp_72_fu_1032_p1 );

    SC_METHOD(thread_tmp_75_fu_1054_p2);
    sensitive << ( tmp_74_fu_1048_p2 );

    SC_METHOD(thread_tmp_76_fu_1065_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_77_cast_fu_1027_p1);
    sensitive << ( tmp_71_fu_1021_p2 );

    SC_METHOD(thread_tmp_77_fu_1069_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_78_fu_1081_p2);
    sensitive << ( p_shl4_cast_fu_1073_p3 );
    sensitive << ( tmp_76_fu_1065_p1 );

    SC_METHOD(thread_tmp_79_fu_1087_p2);
    sensitive << ( tmp_78_fu_1081_p2 );

    SC_METHOD(thread_tmp_80_cast_fu_1060_p1);
    sensitive << ( tmp_75_fu_1054_p2 );

    SC_METHOD(thread_tmp_80_fu_1098_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_81_fu_1102_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_82_fu_1114_p2);
    sensitive << ( p_shl3_cast_fu_1106_p3 );
    sensitive << ( tmp_80_fu_1098_p1 );

    SC_METHOD(thread_tmp_83_cast_fu_1093_p1);
    sensitive << ( tmp_79_fu_1087_p2 );

    SC_METHOD(thread_tmp_83_fu_1120_p2);
    sensitive << ( tmp_82_fu_1114_p2 );

    SC_METHOD(thread_tmp_84_fu_1131_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_85_fu_1135_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_86_cast_fu_1126_p1);
    sensitive << ( tmp_83_fu_1120_p2 );

    SC_METHOD(thread_tmp_86_fu_1147_p2);
    sensitive << ( p_shl2_cast_fu_1139_p3 );
    sensitive << ( tmp_84_fu_1131_p1 );

    SC_METHOD(thread_tmp_87_fu_1158_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_88_cast_fu_1153_p1);
    sensitive << ( tmp_86_fu_1147_p2 );

    SC_METHOD(thread_tmp_88_fu_1162_p1);
    sensitive << ( indices_q1 );

    SC_METHOD(thread_tmp_89_fu_1174_p2);
    sensitive << ( p_shl1_cast_fu_1166_p3 );
    sensitive << ( tmp_87_fu_1158_p1 );

    SC_METHOD(thread_tmp_90_fu_1180_p2);
    sensitive << ( tmp_89_fu_1174_p2 );

    SC_METHOD(thread_tmp_91_cast_fu_1186_p1);
    sensitive << ( tmp_90_fu_1180_p2 );

    SC_METHOD(thread_tmp_91_fu_1191_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_92_fu_1195_p1);
    sensitive << ( indices_q0 );

    SC_METHOD(thread_tmp_93_fu_1207_p2);
    sensitive << ( p_shl_cast_fu_1199_p3 );
    sensitive << ( tmp_91_fu_1191_p1 );

    SC_METHOD(thread_tmp_94_cast_fu_1219_p1);
    sensitive << ( tmp_94_fu_1213_p2 );

    SC_METHOD(thread_tmp_94_fu_1213_p2);
    sensitive << ( tmp_93_fu_1207_p2 );

    SC_METHOD(thread_tmp_fu_731_p1);
    sensitive << ( invdar_reg_435 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_736_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_742_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( exitcond_fu_1224_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "compute_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, covariance_matrix_address0, "(port)covariance_matrix_address0");
    sc_trace(mVcdFile, covariance_matrix_ce0, "(port)covariance_matrix_ce0");
    sc_trace(mVcdFile, covariance_matrix_we0, "(port)covariance_matrix_we0");
    sc_trace(mVcdFile, covariance_matrix_d0, "(port)covariance_matrix_d0");
    sc_trace(mVcdFile, covariance_matrix_address1, "(port)covariance_matrix_address1");
    sc_trace(mVcdFile, covariance_matrix_ce1, "(port)covariance_matrix_ce1");
    sc_trace(mVcdFile, covariance_matrix_we1, "(port)covariance_matrix_we1");
    sc_trace(mVcdFile, covariance_matrix_d1, "(port)covariance_matrix_d1");
    sc_trace(mVcdFile, centroid_address0, "(port)centroid_address0");
    sc_trace(mVcdFile, centroid_ce0, "(port)centroid_ce0");
    sc_trace(mVcdFile, centroid_we0, "(port)centroid_we0");
    sc_trace(mVcdFile, centroid_d0, "(port)centroid_d0");
    sc_trace(mVcdFile, centroid_address1, "(port)centroid_address1");
    sc_trace(mVcdFile, centroid_ce1, "(port)centroid_ce1");
    sc_trace(mVcdFile, centroid_we1, "(port)centroid_we1");
    sc_trace(mVcdFile, centroid_d1, "(port)centroid_d1");
    sc_trace(mVcdFile, cloud_address0, "(port)cloud_address0");
    sc_trace(mVcdFile, cloud_ce0, "(port)cloud_ce0");
    sc_trace(mVcdFile, cloud_q0, "(port)cloud_q0");
    sc_trace(mVcdFile, cloud_address1, "(port)cloud_address1");
    sc_trace(mVcdFile, cloud_ce1, "(port)cloud_ce1");
    sc_trace(mVcdFile, cloud_q1, "(port)cloud_q1");
    sc_trace(mVcdFile, indices_address0, "(port)indices_address0");
    sc_trace(mVcdFile, indices_ce0, "(port)indices_ce0");
    sc_trace(mVcdFile, indices_q0, "(port)indices_q0");
    sc_trace(mVcdFile, indices_address1, "(port)indices_address1");
    sc_trace(mVcdFile, indices_ce1, "(port)indices_ce1");
    sc_trace(mVcdFile, indices_q1, "(port)indices_q1");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_618, "reg_618");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, reg_624, "reg_624");
    sc_trace(mVcdFile, reg_630, "reg_630");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_597_p2, "grp_fu_597_p2");
    sc_trace(mVcdFile, reg_651, "reg_651");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, reg_656, "reg_656");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, reg_661, "reg_661");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, grp_fu_576_p2, "grp_fu_576_p2");
    sc_trace(mVcdFile, reg_666, "reg_666");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, reg_674, "reg_674");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, grp_fu_584_p2, "grp_fu_584_p2");
    sc_trace(mVcdFile, reg_681, "reg_681");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, reg_689, "reg_689");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, accu_q1, "accu_q1");
    sc_trace(mVcdFile, reg_696, "reg_696");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, accu_q0, "accu_q0");
    sc_trace(mVcdFile, reg_705, "reg_705");
    sc_trace(mVcdFile, reg_715, "reg_715");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, indvarinc_fu_725_p2, "indvarinc_fu_725_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_736_p2, "tmp_1_fu_736_p2");
    sc_trace(mVcdFile, i_1_fu_748_p2, "i_1_fu_748_p2");
    sc_trace(mVcdFile, i_1_reg_1353, "i_1_reg_1353");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, indices_addr_reg_1358, "indices_addr_reg_1358");
    sc_trace(mVcdFile, exitcond1_fu_742_p2, "exitcond1_fu_742_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_25_reg_1434, "tmp_25_reg_1434");
    sc_trace(mVcdFile, tmp_29_reg_1444, "tmp_29_reg_1444");
    sc_trace(mVcdFile, tmp_22_reg_1449, "tmp_22_reg_1449");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_26_reg_1455, "tmp_26_reg_1455");
    sc_trace(mVcdFile, grp_fu_589_p2, "grp_fu_589_p2");
    sc_trace(mVcdFile, tmp_38_reg_1461, "tmp_38_reg_1461");
    sc_trace(mVcdFile, tmp_30_reg_1467, "tmp_30_reg_1467");
    sc_trace(mVcdFile, tmp_34_reg_1473, "tmp_34_reg_1473");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, i_2_fu_1230_p2, "i_2_fu_1230_p2");
    sc_trace(mVcdFile, i_2_reg_1482, "i_2_reg_1482");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, accu_addr_10_reg_1487, "accu_addr_10_reg_1487");
    sc_trace(mVcdFile, exitcond_fu_1224_p2, "exitcond_fu_1224_p2");
    sc_trace(mVcdFile, accu_load_3_reg_1492, "accu_load_3_reg_1492");
    sc_trace(mVcdFile, accu_load_4_reg_1497, "accu_load_4_reg_1497");
    sc_trace(mVcdFile, grp_fu_605_p2, "grp_fu_605_p2");
    sc_trace(mVcdFile, tmp_43_reg_1502, "tmp_43_reg_1502");
    sc_trace(mVcdFile, accu_load_6_reg_1507, "accu_load_6_reg_1507");
    sc_trace(mVcdFile, tmp_47_reg_1512, "tmp_47_reg_1512");
    sc_trace(mVcdFile, tmp_51_reg_1517, "tmp_51_reg_1517");
    sc_trace(mVcdFile, accu_address0, "accu_address0");
    sc_trace(mVcdFile, accu_ce0, "accu_ce0");
    sc_trace(mVcdFile, accu_we0, "accu_we0");
    sc_trace(mVcdFile, accu_d0, "accu_d0");
    sc_trace(mVcdFile, accu_address1, "accu_address1");
    sc_trace(mVcdFile, accu_ce1, "accu_ce1");
    sc_trace(mVcdFile, accu_we1, "accu_we1");
    sc_trace(mVcdFile, accu_d1, "accu_d1");
    sc_trace(mVcdFile, invdar_reg_435, "invdar_reg_435");
    sc_trace(mVcdFile, tmp_2_reg_446, "tmp_2_reg_446");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_3_reg_458, "tmp_3_reg_458");
    sc_trace(mVcdFile, tmp_4_reg_470, "tmp_4_reg_470");
    sc_trace(mVcdFile, tmp_5_reg_482, "tmp_5_reg_482");
    sc_trace(mVcdFile, tmp_6_reg_494, "tmp_6_reg_494");
    sc_trace(mVcdFile, tmp_7_reg_506, "tmp_7_reg_506");
    sc_trace(mVcdFile, tmp_8_reg_518, "tmp_8_reg_518");
    sc_trace(mVcdFile, tmp_9_reg_530, "tmp_9_reg_530");
    sc_trace(mVcdFile, tmp_s_reg_542, "tmp_s_reg_542");
    sc_trace(mVcdFile, i_reg_554, "i_reg_554");
    sc_trace(mVcdFile, i1_reg_565, "i1_reg_565");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, tmp_fu_731_p1, "tmp_fu_731_p1");
    sc_trace(mVcdFile, tmp_10_fu_754_p1, "tmp_10_fu_754_p1");
    sc_trace(mVcdFile, tmp_56_cast_fu_781_p1, "tmp_56_cast_fu_781_p1");
    sc_trace(mVcdFile, tmp_58_cast_fu_808_p1, "tmp_58_cast_fu_808_p1");
    sc_trace(mVcdFile, tmp_60_cast_fu_835_p1, "tmp_60_cast_fu_835_p1");
    sc_trace(mVcdFile, tmp_63_cast_fu_868_p1, "tmp_63_cast_fu_868_p1");
    sc_trace(mVcdFile, tmp_65_cast_fu_895_p1, "tmp_65_cast_fu_895_p1");
    sc_trace(mVcdFile, tmp_68_cast_fu_928_p1, "tmp_68_cast_fu_928_p1");
    sc_trace(mVcdFile, tmp_71_cast_fu_961_p1, "tmp_71_cast_fu_961_p1");
    sc_trace(mVcdFile, tmp_74_cast_fu_994_p1, "tmp_74_cast_fu_994_p1");
    sc_trace(mVcdFile, tmp_77_cast_fu_1027_p1, "tmp_77_cast_fu_1027_p1");
    sc_trace(mVcdFile, tmp_80_cast_fu_1060_p1, "tmp_80_cast_fu_1060_p1");
    sc_trace(mVcdFile, tmp_83_cast_fu_1093_p1, "tmp_83_cast_fu_1093_p1");
    sc_trace(mVcdFile, tmp_86_cast_fu_1126_p1, "tmp_86_cast_fu_1126_p1");
    sc_trace(mVcdFile, tmp_88_cast_fu_1153_p1, "tmp_88_cast_fu_1153_p1");
    sc_trace(mVcdFile, tmp_91_cast_fu_1186_p1, "tmp_91_cast_fu_1186_p1");
    sc_trace(mVcdFile, tmp_94_cast_fu_1219_p1, "tmp_94_cast_fu_1219_p1");
    sc_trace(mVcdFile, tmp_53_fu_1236_p1, "tmp_53_fu_1236_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, grp_fu_611_p2, "grp_fu_611_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, grp_fu_576_p0, "grp_fu_576_p0");
    sc_trace(mVcdFile, grp_fu_576_p1, "grp_fu_576_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, grp_fu_584_p0, "grp_fu_584_p0");
    sc_trace(mVcdFile, grp_fu_584_p1, "grp_fu_584_p1");
    sc_trace(mVcdFile, grp_fu_597_p0, "grp_fu_597_p0");
    sc_trace(mVcdFile, grp_fu_597_p1, "grp_fu_597_p1");
    sc_trace(mVcdFile, grp_fu_605_p0, "grp_fu_605_p0");
    sc_trace(mVcdFile, grp_fu_605_p1, "grp_fu_605_p1");
    sc_trace(mVcdFile, tmp_12_fu_763_p1, "tmp_12_fu_763_p1");
    sc_trace(mVcdFile, p_shl14_cast_fu_767_p3, "p_shl14_cast_fu_767_p3");
    sc_trace(mVcdFile, tmp_11_fu_759_p1, "tmp_11_fu_759_p1");
    sc_trace(mVcdFile, tmp_15_fu_775_p2, "tmp_15_fu_775_p2");
    sc_trace(mVcdFile, tmp_19_fu_790_p1, "tmp_19_fu_790_p1");
    sc_trace(mVcdFile, p_shl13_cast_fu_794_p3, "p_shl13_cast_fu_794_p3");
    sc_trace(mVcdFile, tmp_16_fu_786_p1, "tmp_16_fu_786_p1");
    sc_trace(mVcdFile, tmp_20_fu_802_p2, "tmp_20_fu_802_p2");
    sc_trace(mVcdFile, tmp_24_fu_817_p1, "tmp_24_fu_817_p1");
    sc_trace(mVcdFile, p_shl12_cast_fu_821_p3, "p_shl12_cast_fu_821_p3");
    sc_trace(mVcdFile, tmp_23_fu_813_p1, "tmp_23_fu_813_p1");
    sc_trace(mVcdFile, tmp_27_fu_829_p2, "tmp_27_fu_829_p2");
    sc_trace(mVcdFile, tmp_31_fu_844_p1, "tmp_31_fu_844_p1");
    sc_trace(mVcdFile, p_shl11_cast_fu_848_p3, "p_shl11_cast_fu_848_p3");
    sc_trace(mVcdFile, tmp_28_fu_840_p1, "tmp_28_fu_840_p1");
    sc_trace(mVcdFile, tmp_32_fu_856_p2, "tmp_32_fu_856_p2");
    sc_trace(mVcdFile, tmp_35_fu_862_p2, "tmp_35_fu_862_p2");
    sc_trace(mVcdFile, tmp_39_fu_877_p1, "tmp_39_fu_877_p1");
    sc_trace(mVcdFile, p_shl10_cast_fu_881_p3, "p_shl10_cast_fu_881_p3");
    sc_trace(mVcdFile, tmp_37_fu_873_p1, "tmp_37_fu_873_p1");
    sc_trace(mVcdFile, tmp_55_fu_889_p2, "tmp_55_fu_889_p2");
    sc_trace(mVcdFile, tmp_57_fu_904_p1, "tmp_57_fu_904_p1");
    sc_trace(mVcdFile, p_shl9_cast_fu_908_p3, "p_shl9_cast_fu_908_p3");
    sc_trace(mVcdFile, tmp_56_fu_900_p1, "tmp_56_fu_900_p1");
    sc_trace(mVcdFile, tmp_58_fu_916_p2, "tmp_58_fu_916_p2");
    sc_trace(mVcdFile, tmp_59_fu_922_p2, "tmp_59_fu_922_p2");
    sc_trace(mVcdFile, tmp_61_fu_937_p1, "tmp_61_fu_937_p1");
    sc_trace(mVcdFile, p_shl8_cast_fu_941_p3, "p_shl8_cast_fu_941_p3");
    sc_trace(mVcdFile, tmp_60_fu_933_p1, "tmp_60_fu_933_p1");
    sc_trace(mVcdFile, tmp_62_fu_949_p2, "tmp_62_fu_949_p2");
    sc_trace(mVcdFile, tmp_63_fu_955_p2, "tmp_63_fu_955_p2");
    sc_trace(mVcdFile, tmp_65_fu_970_p1, "tmp_65_fu_970_p1");
    sc_trace(mVcdFile, p_shl7_cast_fu_974_p3, "p_shl7_cast_fu_974_p3");
    sc_trace(mVcdFile, tmp_64_fu_966_p1, "tmp_64_fu_966_p1");
    sc_trace(mVcdFile, tmp_66_fu_982_p2, "tmp_66_fu_982_p2");
    sc_trace(mVcdFile, tmp_67_fu_988_p2, "tmp_67_fu_988_p2");
    sc_trace(mVcdFile, tmp_69_fu_1003_p1, "tmp_69_fu_1003_p1");
    sc_trace(mVcdFile, p_shl6_cast_fu_1007_p3, "p_shl6_cast_fu_1007_p3");
    sc_trace(mVcdFile, tmp_68_fu_999_p1, "tmp_68_fu_999_p1");
    sc_trace(mVcdFile, tmp_70_fu_1015_p2, "tmp_70_fu_1015_p2");
    sc_trace(mVcdFile, tmp_71_fu_1021_p2, "tmp_71_fu_1021_p2");
    sc_trace(mVcdFile, tmp_73_fu_1036_p1, "tmp_73_fu_1036_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_1040_p3, "p_shl5_cast_fu_1040_p3");
    sc_trace(mVcdFile, tmp_72_fu_1032_p1, "tmp_72_fu_1032_p1");
    sc_trace(mVcdFile, tmp_74_fu_1048_p2, "tmp_74_fu_1048_p2");
    sc_trace(mVcdFile, tmp_75_fu_1054_p2, "tmp_75_fu_1054_p2");
    sc_trace(mVcdFile, tmp_77_fu_1069_p1, "tmp_77_fu_1069_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_1073_p3, "p_shl4_cast_fu_1073_p3");
    sc_trace(mVcdFile, tmp_76_fu_1065_p1, "tmp_76_fu_1065_p1");
    sc_trace(mVcdFile, tmp_78_fu_1081_p2, "tmp_78_fu_1081_p2");
    sc_trace(mVcdFile, tmp_79_fu_1087_p2, "tmp_79_fu_1087_p2");
    sc_trace(mVcdFile, tmp_81_fu_1102_p1, "tmp_81_fu_1102_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_1106_p3, "p_shl3_cast_fu_1106_p3");
    sc_trace(mVcdFile, tmp_80_fu_1098_p1, "tmp_80_fu_1098_p1");
    sc_trace(mVcdFile, tmp_82_fu_1114_p2, "tmp_82_fu_1114_p2");
    sc_trace(mVcdFile, tmp_83_fu_1120_p2, "tmp_83_fu_1120_p2");
    sc_trace(mVcdFile, tmp_85_fu_1135_p1, "tmp_85_fu_1135_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_1139_p3, "p_shl2_cast_fu_1139_p3");
    sc_trace(mVcdFile, tmp_84_fu_1131_p1, "tmp_84_fu_1131_p1");
    sc_trace(mVcdFile, tmp_86_fu_1147_p2, "tmp_86_fu_1147_p2");
    sc_trace(mVcdFile, tmp_88_fu_1162_p1, "tmp_88_fu_1162_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_1166_p3, "p_shl1_cast_fu_1166_p3");
    sc_trace(mVcdFile, tmp_87_fu_1158_p1, "tmp_87_fu_1158_p1");
    sc_trace(mVcdFile, tmp_89_fu_1174_p2, "tmp_89_fu_1174_p2");
    sc_trace(mVcdFile, tmp_90_fu_1180_p2, "tmp_90_fu_1180_p2");
    sc_trace(mVcdFile, tmp_92_fu_1195_p1, "tmp_92_fu_1195_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_1199_p3, "p_shl_cast_fu_1199_p3");
    sc_trace(mVcdFile, tmp_91_fu_1191_p1, "tmp_91_fu_1191_p1");
    sc_trace(mVcdFile, tmp_93_fu_1207_p2, "tmp_93_fu_1207_p2");
    sc_trace(mVcdFile, tmp_94_fu_1213_p2, "tmp_94_fu_1213_p2");
    sc_trace(mVcdFile, grp_fu_576_opcode, "grp_fu_576_opcode");
    sc_trace(mVcdFile, grp_fu_584_opcode, "grp_fu_584_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("compute.hdltvin.dat");
    mHdltvoutHandle.open("compute.hdltvout.dat");
}

compute::~compute() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete accu_U;
    delete compute_faddfsub_bkb_U1;
    delete compute_faddfsub_bkb_U2;
    delete compute_fadd_32nscud_U3;
    delete compute_fmul_32nsdEe_U4;
    delete compute_fmul_32nsdEe_U5;
    delete compute_fdiv_32nseOg_U6;
}

void compute::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void compute::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_41200000;
}

void compute::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_742_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i1_reg_565 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        i1_reg_565 = i_2_reg_1482.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        i_reg_554 = i_1_reg_1353.read();
    } else if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_reg_554 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        invdar_reg_435 = indvarinc_fu_725_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        invdar_reg_435 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        reg_705 = accu_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        reg_705 = accu_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        reg_715 = accu_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        reg_715 = accu_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_2_reg_446 = reg_689.read();
    } else if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_2_reg_446 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_3_reg_458 = tmp_38_reg_1461.read();
    } else if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_3_reg_458 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_4_reg_470 = reg_681.read();
    } else if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_4_reg_470 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_5_reg_482 = tmp_34_reg_1473.read();
    } else if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_5_reg_482 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_6_reg_494 = tmp_30_reg_1467.read();
    } else if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_6_reg_494 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_7_reg_506 = tmp_26_reg_1455.read();
    } else if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_7_reg_506 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_8_reg_518 = tmp_22_reg_1449.read();
    } else if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_8_reg_518 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_9_reg_530 = reg_674.read();
    } else if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_9_reg_530 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_s_reg_542 = reg_666.read();
    } else if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_s_reg_542 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_1224_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        accu_addr_10_reg_1487 =  (sc_lv<4>) (tmp_53_fu_1236_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        accu_load_3_reg_1492 = accu_q1.read();
        accu_load_4_reg_1497 = accu_q0.read();
        tmp_43_reg_1502 = grp_fu_605_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        accu_load_6_reg_1507 = accu_q0.read();
        tmp_47_reg_1512 = grp_fu_605_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_1_reg_1353 = i_1_fu_748_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i_2_reg_1482 = i_2_fu_1230_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_742_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        indices_addr_reg_1358 =  (sc_lv<3>) (tmp_10_fu_754_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        reg_618 = cloud_q0.read();
        reg_624 = cloud_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        reg_630 = cloud_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        reg_651 = grp_fu_597_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        reg_656 = grp_fu_597_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        reg_661 = grp_fu_597_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        reg_666 = grp_fu_576_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        reg_674 = grp_fu_576_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        reg_681 = grp_fu_584_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        reg_689 = grp_fu_584_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        reg_696 = accu_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_22_reg_1449 = grp_fu_576_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_25_reg_1434 = grp_fu_597_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_26_reg_1455 = grp_fu_576_p2.read();
        tmp_38_reg_1461 = grp_fu_589_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_29_reg_1444 = grp_fu_597_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_30_reg_1467 = grp_fu_576_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        tmp_34_reg_1473 = grp_fu_576_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        tmp_51_reg_1517 = grp_fu_605_p2.read();
    }
}

void compute::thread_accu_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        accu_address0 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        accu_address0 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        accu_address0 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        accu_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        accu_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        accu_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        accu_address0 =  (sc_lv<4>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        accu_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        accu_address0 =  (sc_lv<4>) (tmp_fu_731_p1.read());
    } else {
        accu_address0 = "XXXX";
    }
}

void compute::thread_accu_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        accu_address1 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        accu_address1 =  (sc_lv<4>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        accu_address1 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        accu_address1 = accu_addr_10_reg_1487.read();
    } else if ((esl_seteq<1,1,1>(exitcond_fu_1224_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        accu_address1 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if ((esl_seteq<1,1,1>(exitcond_fu_1224_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        accu_address1 =  (sc_lv<4>) (tmp_53_fu_1236_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        accu_address1 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        accu_address1 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        accu_address1 =  (sc_lv<4>) (ap_const_lv64_7);
    } else {
        accu_address1 = "XXXX";
    }
}

void compute::thread_accu_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        accu_ce0 = ap_const_logic_1;
    } else {
        accu_ce0 = ap_const_logic_0;
    }
}

void compute::thread_accu_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         (esl_seteq<1,1,1>(exitcond_fu_1224_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         (esl_seteq<1,1,1>(exitcond_fu_1224_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())))) {
        accu_ce1 = ap_const_logic_1;
    } else {
        accu_ce1 = ap_const_logic_0;
    }
}

void compute::thread_accu_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        accu_d0 = tmp_34_reg_1473.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        accu_d0 = reg_689.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        accu_d0 = reg_681.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        accu_d0 = tmp_22_reg_1449.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        accu_d0 = reg_674.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        accu_d0 = reg_666.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        accu_d0 = ap_const_lv32_0;
    } else {
        accu_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_accu_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        accu_d1 = grp_fu_611_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        accu_d1 = tmp_30_reg_1467.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        accu_d1 = tmp_26_reg_1455.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        accu_d1 = tmp_38_reg_1461.read();
    } else {
        accu_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_accu_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        accu_we0 = ap_const_logic_1;
    } else {
        accu_we0 = ap_const_logic_0;
    }
}

void compute::thread_accu_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        accu_we1 = ap_const_logic_1;
    } else {
        accu_we1 = ap_const_logic_0;
    }
}

void compute::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void compute::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void compute::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void compute::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void compute::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void compute::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void compute::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void compute::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void compute::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void compute::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void compute::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void compute::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void compute::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void compute::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void compute::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void compute::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void compute::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void compute::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void compute::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void compute::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void compute::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void compute::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void compute::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void compute::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void compute::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void compute::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void compute::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void compute::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void compute::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void compute::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void compute::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void compute::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void compute::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void compute::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void compute::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void compute::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void compute::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void compute::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void compute::thread_ap_return() {
    ap_return = ap_const_lv32_0;
}

void compute::thread_centroid_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        centroid_address0 =  (sc_lv<2>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        centroid_address0 =  (sc_lv<2>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        centroid_address0 =  (sc_lv<2>) (ap_const_lv64_0);
    } else {
        centroid_address0 =  (sc_lv<2>) ("XX");
    }
}

void compute::thread_centroid_address1() {
    centroid_address1 =  (sc_lv<2>) (ap_const_lv64_2);
}

void compute::thread_centroid_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        centroid_ce0 = ap_const_logic_1;
    } else {
        centroid_ce0 = ap_const_logic_0;
    }
}

void compute::thread_centroid_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        centroid_ce1 = ap_const_logic_1;
    } else {
        centroid_ce1 = ap_const_logic_0;
    }
}

void compute::thread_centroid_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        centroid_d0 = reg_705.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        centroid_d0 = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        centroid_d0 = accu_q1.read();
    } else {
        centroid_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_centroid_d1() {
    centroid_d1 = reg_715.read();
}

void compute::thread_centroid_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        centroid_we0 = ap_const_logic_1;
    } else {
        centroid_we0 = ap_const_logic_0;
    }
}

void compute::thread_centroid_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        centroid_we1 = ap_const_logic_1;
    } else {
        centroid_we1 = ap_const_logic_0;
    }
}

void compute::thread_cloud_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        cloud_address0 =  (sc_lv<5>) (tmp_94_cast_fu_1219_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        cloud_address0 =  (sc_lv<5>) (tmp_88_cast_fu_1153_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        cloud_address0 =  (sc_lv<5>) (tmp_83_cast_fu_1093_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        cloud_address0 =  (sc_lv<5>) (tmp_77_cast_fu_1027_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cloud_address0 =  (sc_lv<5>) (tmp_71_cast_fu_961_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cloud_address0 =  (sc_lv<5>) (tmp_65_cast_fu_895_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cloud_address0 =  (sc_lv<5>) (tmp_60_cast_fu_835_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cloud_address0 =  (sc_lv<5>) (tmp_56_cast_fu_781_p1.read());
    } else {
        cloud_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void compute::thread_cloud_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        cloud_address1 =  (sc_lv<5>) (tmp_91_cast_fu_1186_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        cloud_address1 =  (sc_lv<5>) (tmp_86_cast_fu_1126_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        cloud_address1 =  (sc_lv<5>) (tmp_80_cast_fu_1060_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cloud_address1 =  (sc_lv<5>) (tmp_74_cast_fu_994_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cloud_address1 =  (sc_lv<5>) (tmp_68_cast_fu_928_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cloud_address1 =  (sc_lv<5>) (tmp_63_cast_fu_868_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cloud_address1 =  (sc_lv<5>) (tmp_58_cast_fu_808_p1.read());
    } else {
        cloud_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void compute::thread_cloud_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        cloud_ce0 = ap_const_logic_1;
    } else {
        cloud_ce0 = ap_const_logic_0;
    }
}

void compute::thread_cloud_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        cloud_ce1 = ap_const_logic_1;
    } else {
        cloud_ce1 = ap_const_logic_0;
    }
}

void compute::thread_covariance_matrix_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        covariance_matrix_address0 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        covariance_matrix_address0 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        covariance_matrix_address0 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        covariance_matrix_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        covariance_matrix_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        covariance_matrix_address0 = "XXXX";
    }
}

void compute::thread_covariance_matrix_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        covariance_matrix_address1 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        covariance_matrix_address1 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        covariance_matrix_address1 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        covariance_matrix_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else {
        covariance_matrix_address1 = "XXXX";
    }
}

void compute::thread_covariance_matrix_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()))) {
        covariance_matrix_ce0 = ap_const_logic_1;
    } else {
        covariance_matrix_ce0 = ap_const_logic_0;
    }
}

void compute::thread_covariance_matrix_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()))) {
        covariance_matrix_ce1 = ap_const_logic_1;
    } else {
        covariance_matrix_ce1 = ap_const_logic_0;
    }
}

void compute::thread_covariance_matrix_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        covariance_matrix_d0 = reg_681.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()))) {
        covariance_matrix_d0 = reg_674.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        covariance_matrix_d0 = reg_666.read();
    } else {
        covariance_matrix_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_covariance_matrix_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        covariance_matrix_d1 = reg_666.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        covariance_matrix_d1 = reg_689.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        covariance_matrix_d1 = reg_681.read();
    } else {
        covariance_matrix_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_covariance_matrix_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()))) {
        covariance_matrix_we0 = ap_const_logic_1;
    } else {
        covariance_matrix_we0 = ap_const_logic_0;
    }
}

void compute::thread_covariance_matrix_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()))) {
        covariance_matrix_we1 = ap_const_logic_1;
    } else {
        covariance_matrix_we1 = ap_const_logic_0;
    }
}

void compute::thread_exitcond1_fu_742_p2() {
    exitcond1_fu_742_p2 = (!i_reg_554.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_554.read() == ap_const_lv3_5);
}

void compute::thread_exitcond_fu_1224_p2() {
    exitcond_fu_1224_p2 = (!i1_reg_565.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_565.read() == ap_const_lv4_9);
}

void compute::thread_grp_fu_576_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        grp_fu_576_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        grp_fu_576_opcode = ap_const_lv2_0;
    } else {
        grp_fu_576_opcode =  (sc_lv<2>) ("XX");
    }
}

void compute::thread_grp_fu_576_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_fu_576_p0 = reg_705.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_576_p0 = reg_696.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_fu_576_p0 = accu_load_3_reg_1492.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_576_p0 = tmp_5_reg_482.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_576_p0 = tmp_6_reg_494.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_576_p0 = tmp_7_reg_506.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_576_p0 = tmp_8_reg_518.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_576_p0 = tmp_9_reg_530.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_576_p0 = tmp_s_reg_542.read();
    } else {
        grp_fu_576_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_fu_576_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_576_p1 = tmp_29_reg_1444.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_576_p1 = tmp_25_reg_1434.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        grp_fu_576_p1 = reg_661.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        grp_fu_576_p1 = reg_656.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        grp_fu_576_p1 = reg_651.read();
    } else {
        grp_fu_576_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_fu_584_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        grp_fu_584_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        grp_fu_584_opcode = ap_const_lv2_0;
    } else {
        grp_fu_584_opcode =  (sc_lv<2>) ("XX");
    }
}

void compute::thread_grp_fu_584_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_fu_584_p0 = reg_715.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_584_p0 = accu_load_6_reg_1507.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_fu_584_p0 = accu_load_4_reg_1497.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_584_p0 = tmp_2_reg_446.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_584_p0 = tmp_4_reg_470.read();
    } else {
        grp_fu_584_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_fu_584_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_fu_584_p1 = tmp_51_reg_1517.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_584_p1 = tmp_47_reg_1512.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_fu_584_p1 = tmp_43_reg_1502.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_584_p1 = reg_630.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_584_p1 = reg_618.read();
    } else {
        grp_fu_584_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_fu_597_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_597_p0 = reg_705.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_fu_597_p0 = reg_696.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        grp_fu_597_p0 = accu_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        grp_fu_597_p0 = cloud_q0.read();
    } else {
        grp_fu_597_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_fu_597_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_597_p1 = reg_715.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        grp_fu_597_p1 = accu_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        grp_fu_597_p1 = cloud_q1.read();
    } else {
        grp_fu_597_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_fu_605_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_605_p0 = reg_715.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_fu_605_p0 = reg_705.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        grp_fu_605_p0 = accu_q1.read();
    } else {
        grp_fu_605_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_fu_605_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_605_p1 = reg_715.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_fu_605_p1 = reg_705.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        grp_fu_605_p1 = accu_q0.read();
    } else {
        grp_fu_605_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_i_1_fu_748_p2() {
    i_1_fu_748_p2 = (!i_reg_554.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_554.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void compute::thread_i_2_fu_1230_p2() {
    i_2_fu_1230_p2 = (!i1_reg_565.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i1_reg_565.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void compute::thread_indices_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        indices_address0 = indices_addr_reg_1358.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        indices_address0 =  (sc_lv<3>) (tmp_10_fu_754_p1.read());
    } else {
        indices_address0 =  (sc_lv<3>) ("XXX");
    }
}

void compute::thread_indices_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        indices_address1 = indices_addr_reg_1358.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        indices_address1 =  (sc_lv<3>) (tmp_10_fu_754_p1.read());
    } else {
        indices_address1 =  (sc_lv<3>) ("XXX");
    }
}

void compute::thread_indices_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        indices_ce0 = ap_const_logic_1;
    } else {
        indices_ce0 = ap_const_logic_0;
    }
}

void compute::thread_indices_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        indices_ce1 = ap_const_logic_1;
    } else {
        indices_ce1 = ap_const_logic_0;
    }
}

void compute::thread_indvarinc_fu_725_p2() {
    indvarinc_fu_725_p2 = (!invdar_reg_435.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(invdar_reg_435.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void compute::thread_p_shl10_cast_fu_881_p3() {
    p_shl10_cast_fu_881_p3 = esl_concat<4,2>(tmp_39_fu_877_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl11_cast_fu_848_p3() {
    p_shl11_cast_fu_848_p3 = esl_concat<4,2>(tmp_31_fu_844_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl12_cast_fu_821_p3() {
    p_shl12_cast_fu_821_p3 = esl_concat<4,2>(tmp_24_fu_817_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl13_cast_fu_794_p3() {
    p_shl13_cast_fu_794_p3 = esl_concat<4,2>(tmp_19_fu_790_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl14_cast_fu_767_p3() {
    p_shl14_cast_fu_767_p3 = esl_concat<4,2>(tmp_12_fu_763_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl1_cast_fu_1166_p3() {
    p_shl1_cast_fu_1166_p3 = esl_concat<4,2>(tmp_88_fu_1162_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl2_cast_fu_1139_p3() {
    p_shl2_cast_fu_1139_p3 = esl_concat<4,2>(tmp_85_fu_1135_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl3_cast_fu_1106_p3() {
    p_shl3_cast_fu_1106_p3 = esl_concat<4,2>(tmp_81_fu_1102_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl4_cast_fu_1073_p3() {
    p_shl4_cast_fu_1073_p3 = esl_concat<4,2>(tmp_77_fu_1069_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl5_cast_fu_1040_p3() {
    p_shl5_cast_fu_1040_p3 = esl_concat<4,2>(tmp_73_fu_1036_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl6_cast_fu_1007_p3() {
    p_shl6_cast_fu_1007_p3 = esl_concat<4,2>(tmp_69_fu_1003_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl7_cast_fu_974_p3() {
    p_shl7_cast_fu_974_p3 = esl_concat<4,2>(tmp_65_fu_970_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl8_cast_fu_941_p3() {
    p_shl8_cast_fu_941_p3 = esl_concat<4,2>(tmp_61_fu_937_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl9_cast_fu_908_p3() {
    p_shl9_cast_fu_908_p3 = esl_concat<4,2>(tmp_57_fu_904_p1.read(), ap_const_lv2_0);
}

void compute::thread_p_shl_cast_fu_1199_p3() {
    p_shl_cast_fu_1199_p3 = esl_concat<4,2>(tmp_92_fu_1195_p1.read(), ap_const_lv2_0);
}

void compute::thread_tmp_10_fu_754_p1() {
    tmp_10_fu_754_p1 = esl_zext<64,3>(i_reg_554.read());
}

void compute::thread_tmp_11_fu_759_p1() {
    tmp_11_fu_759_p1 = indices_q0.read().range(6-1, 0);
}

void compute::thread_tmp_12_fu_763_p1() {
    tmp_12_fu_763_p1 = indices_q0.read().range(4-1, 0);
}

void compute::thread_tmp_15_fu_775_p2() {
    tmp_15_fu_775_p2 = (!p_shl14_cast_fu_767_p3.read().is_01() || !tmp_11_fu_759_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl14_cast_fu_767_p3.read()) - sc_biguint<6>(tmp_11_fu_759_p1.read()));
}

void compute::thread_tmp_16_fu_786_p1() {
    tmp_16_fu_786_p1 = indices_q1.read().range(6-1, 0);
}

void compute::thread_tmp_19_fu_790_p1() {
    tmp_19_fu_790_p1 = indices_q1.read().range(4-1, 0);
}

void compute::thread_tmp_1_fu_736_p2() {
    tmp_1_fu_736_p2 = (!invdar_reg_435.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_435.read() == ap_const_lv4_8);
}

void compute::thread_tmp_20_fu_802_p2() {
    tmp_20_fu_802_p2 = (!p_shl13_cast_fu_794_p3.read().is_01() || !tmp_16_fu_786_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl13_cast_fu_794_p3.read()) - sc_biguint<6>(tmp_16_fu_786_p1.read()));
}

void compute::thread_tmp_23_fu_813_p1() {
    tmp_23_fu_813_p1 = indices_q0.read().range(6-1, 0);
}

void compute::thread_tmp_24_fu_817_p1() {
    tmp_24_fu_817_p1 = indices_q0.read().range(4-1, 0);
}

void compute::thread_tmp_27_fu_829_p2() {
    tmp_27_fu_829_p2 = (!p_shl12_cast_fu_821_p3.read().is_01() || !tmp_23_fu_813_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl12_cast_fu_821_p3.read()) - sc_biguint<6>(tmp_23_fu_813_p1.read()));
}

void compute::thread_tmp_28_fu_840_p1() {
    tmp_28_fu_840_p1 = indices_q1.read().range(6-1, 0);
}

void compute::thread_tmp_31_fu_844_p1() {
    tmp_31_fu_844_p1 = indices_q1.read().range(4-1, 0);
}

void compute::thread_tmp_32_fu_856_p2() {
    tmp_32_fu_856_p2 = (!p_shl11_cast_fu_848_p3.read().is_01() || !tmp_28_fu_840_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl11_cast_fu_848_p3.read()) - sc_biguint<6>(tmp_28_fu_840_p1.read()));
}

void compute::thread_tmp_35_fu_862_p2() {
    tmp_35_fu_862_p2 = (!ap_const_lv6_1.is_01() || !tmp_32_fu_856_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(tmp_32_fu_856_p2.read()));
}

void compute::thread_tmp_37_fu_873_p1() {
    tmp_37_fu_873_p1 = indices_q0.read().range(6-1, 0);
}

void compute::thread_tmp_39_fu_877_p1() {
    tmp_39_fu_877_p1 = indices_q0.read().range(4-1, 0);
}

void compute::thread_tmp_53_fu_1236_p1() {
    tmp_53_fu_1236_p1 = esl_zext<64,4>(i1_reg_565.read());
}

void compute::thread_tmp_55_fu_889_p2() {
    tmp_55_fu_889_p2 = (!p_shl10_cast_fu_881_p3.read().is_01() || !tmp_37_fu_873_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl10_cast_fu_881_p3.read()) - sc_biguint<6>(tmp_37_fu_873_p1.read()));
}

void compute::thread_tmp_56_cast_fu_781_p1() {
    tmp_56_cast_fu_781_p1 = esl_sext<64,6>(tmp_15_fu_775_p2.read());
}

void compute::thread_tmp_56_fu_900_p1() {
    tmp_56_fu_900_p1 = indices_q1.read().range(6-1, 0);
}

void compute::thread_tmp_57_fu_904_p1() {
    tmp_57_fu_904_p1 = indices_q1.read().range(4-1, 0);
}

void compute::thread_tmp_58_cast_fu_808_p1() {
    tmp_58_cast_fu_808_p1 = esl_sext<64,6>(tmp_20_fu_802_p2.read());
}

void compute::thread_tmp_58_fu_916_p2() {
    tmp_58_fu_916_p2 = (!p_shl9_cast_fu_908_p3.read().is_01() || !tmp_56_fu_900_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl9_cast_fu_908_p3.read()) - sc_biguint<6>(tmp_56_fu_900_p1.read()));
}

void compute::thread_tmp_59_fu_922_p2() {
    tmp_59_fu_922_p2 = (!ap_const_lv6_2.is_01() || !tmp_58_fu_916_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_2) + sc_biguint<6>(tmp_58_fu_916_p2.read()));
}

void compute::thread_tmp_60_cast_fu_835_p1() {
    tmp_60_cast_fu_835_p1 = esl_sext<64,6>(tmp_27_fu_829_p2.read());
}

void compute::thread_tmp_60_fu_933_p1() {
    tmp_60_fu_933_p1 = indices_q0.read().range(6-1, 0);
}

void compute::thread_tmp_61_fu_937_p1() {
    tmp_61_fu_937_p1 = indices_q0.read().range(4-1, 0);
}

void compute::thread_tmp_62_fu_949_p2() {
    tmp_62_fu_949_p2 = (!p_shl8_cast_fu_941_p3.read().is_01() || !tmp_60_fu_933_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl8_cast_fu_941_p3.read()) - sc_biguint<6>(tmp_60_fu_933_p1.read()));
}

void compute::thread_tmp_63_cast_fu_868_p1() {
    tmp_63_cast_fu_868_p1 = esl_sext<64,6>(tmp_35_fu_862_p2.read());
}

void compute::thread_tmp_63_fu_955_p2() {
    tmp_63_fu_955_p2 = (!ap_const_lv6_1.is_01() || !tmp_62_fu_949_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(tmp_62_fu_949_p2.read()));
}

void compute::thread_tmp_64_fu_966_p1() {
    tmp_64_fu_966_p1 = indices_q1.read().range(6-1, 0);
}

void compute::thread_tmp_65_cast_fu_895_p1() {
    tmp_65_cast_fu_895_p1 = esl_sext<64,6>(tmp_55_fu_889_p2.read());
}

void compute::thread_tmp_65_fu_970_p1() {
    tmp_65_fu_970_p1 = indices_q1.read().range(4-1, 0);
}

void compute::thread_tmp_66_fu_982_p2() {
    tmp_66_fu_982_p2 = (!p_shl7_cast_fu_974_p3.read().is_01() || !tmp_64_fu_966_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl7_cast_fu_974_p3.read()) - sc_biguint<6>(tmp_64_fu_966_p1.read()));
}

void compute::thread_tmp_67_fu_988_p2() {
    tmp_67_fu_988_p2 = (!ap_const_lv6_1.is_01() || !tmp_66_fu_982_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(tmp_66_fu_982_p2.read()));
}

void compute::thread_tmp_68_cast_fu_928_p1() {
    tmp_68_cast_fu_928_p1 = esl_sext<64,6>(tmp_59_fu_922_p2.read());
}

void compute::thread_tmp_68_fu_999_p1() {
    tmp_68_fu_999_p1 = indices_q0.read().range(6-1, 0);
}

void compute::thread_tmp_69_fu_1003_p1() {
    tmp_69_fu_1003_p1 = indices_q0.read().range(4-1, 0);
}

void compute::thread_tmp_70_fu_1015_p2() {
    tmp_70_fu_1015_p2 = (!p_shl6_cast_fu_1007_p3.read().is_01() || !tmp_68_fu_999_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl6_cast_fu_1007_p3.read()) - sc_biguint<6>(tmp_68_fu_999_p1.read()));
}

void compute::thread_tmp_71_cast_fu_961_p1() {
    tmp_71_cast_fu_961_p1 = esl_sext<64,6>(tmp_63_fu_955_p2.read());
}

void compute::thread_tmp_71_fu_1021_p2() {
    tmp_71_fu_1021_p2 = (!ap_const_lv6_1.is_01() || !tmp_70_fu_1015_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(tmp_70_fu_1015_p2.read()));
}

void compute::thread_tmp_72_fu_1032_p1() {
    tmp_72_fu_1032_p1 = indices_q1.read().range(6-1, 0);
}

void compute::thread_tmp_73_fu_1036_p1() {
    tmp_73_fu_1036_p1 = indices_q1.read().range(4-1, 0);
}

void compute::thread_tmp_74_cast_fu_994_p1() {
    tmp_74_cast_fu_994_p1 = esl_sext<64,6>(tmp_67_fu_988_p2.read());
}

void compute::thread_tmp_74_fu_1048_p2() {
    tmp_74_fu_1048_p2 = (!p_shl5_cast_fu_1040_p3.read().is_01() || !tmp_72_fu_1032_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl5_cast_fu_1040_p3.read()) - sc_biguint<6>(tmp_72_fu_1032_p1.read()));
}

void compute::thread_tmp_75_fu_1054_p2() {
    tmp_75_fu_1054_p2 = (!ap_const_lv6_2.is_01() || !tmp_74_fu_1048_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_2) + sc_biguint<6>(tmp_74_fu_1048_p2.read()));
}

void compute::thread_tmp_76_fu_1065_p1() {
    tmp_76_fu_1065_p1 = indices_q0.read().range(6-1, 0);
}

void compute::thread_tmp_77_cast_fu_1027_p1() {
    tmp_77_cast_fu_1027_p1 = esl_sext<64,6>(tmp_71_fu_1021_p2.read());
}

void compute::thread_tmp_77_fu_1069_p1() {
    tmp_77_fu_1069_p1 = indices_q0.read().range(4-1, 0);
}

void compute::thread_tmp_78_fu_1081_p2() {
    tmp_78_fu_1081_p2 = (!p_shl4_cast_fu_1073_p3.read().is_01() || !tmp_76_fu_1065_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl4_cast_fu_1073_p3.read()) - sc_biguint<6>(tmp_76_fu_1065_p1.read()));
}

void compute::thread_tmp_79_fu_1087_p2() {
    tmp_79_fu_1087_p2 = (!ap_const_lv6_2.is_01() || !tmp_78_fu_1081_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_2) + sc_biguint<6>(tmp_78_fu_1081_p2.read()));
}

void compute::thread_tmp_80_cast_fu_1060_p1() {
    tmp_80_cast_fu_1060_p1 = esl_sext<64,6>(tmp_75_fu_1054_p2.read());
}

void compute::thread_tmp_80_fu_1098_p1() {
    tmp_80_fu_1098_p1 = indices_q1.read().range(6-1, 0);
}

void compute::thread_tmp_81_fu_1102_p1() {
    tmp_81_fu_1102_p1 = indices_q1.read().range(4-1, 0);
}

void compute::thread_tmp_82_fu_1114_p2() {
    tmp_82_fu_1114_p2 = (!p_shl3_cast_fu_1106_p3.read().is_01() || !tmp_80_fu_1098_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl3_cast_fu_1106_p3.read()) - sc_biguint<6>(tmp_80_fu_1098_p1.read()));
}

void compute::thread_tmp_83_cast_fu_1093_p1() {
    tmp_83_cast_fu_1093_p1 = esl_sext<64,6>(tmp_79_fu_1087_p2.read());
}

void compute::thread_tmp_83_fu_1120_p2() {
    tmp_83_fu_1120_p2 = (!ap_const_lv6_2.is_01() || !tmp_82_fu_1114_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_2) + sc_biguint<6>(tmp_82_fu_1114_p2.read()));
}

void compute::thread_tmp_84_fu_1131_p1() {
    tmp_84_fu_1131_p1 = indices_q0.read().range(6-1, 0);
}

void compute::thread_tmp_85_fu_1135_p1() {
    tmp_85_fu_1135_p1 = indices_q0.read().range(4-1, 0);
}

void compute::thread_tmp_86_cast_fu_1126_p1() {
    tmp_86_cast_fu_1126_p1 = esl_sext<64,6>(tmp_83_fu_1120_p2.read());
}

void compute::thread_tmp_86_fu_1147_p2() {
    tmp_86_fu_1147_p2 = (!p_shl2_cast_fu_1139_p3.read().is_01() || !tmp_84_fu_1131_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl2_cast_fu_1139_p3.read()) - sc_biguint<6>(tmp_84_fu_1131_p1.read()));
}

void compute::thread_tmp_87_fu_1158_p1() {
    tmp_87_fu_1158_p1 = indices_q1.read().range(6-1, 0);
}

void compute::thread_tmp_88_cast_fu_1153_p1() {
    tmp_88_cast_fu_1153_p1 = esl_sext<64,6>(tmp_86_fu_1147_p2.read());
}

void compute::thread_tmp_88_fu_1162_p1() {
    tmp_88_fu_1162_p1 = indices_q1.read().range(4-1, 0);
}

void compute::thread_tmp_89_fu_1174_p2() {
    tmp_89_fu_1174_p2 = (!p_shl1_cast_fu_1166_p3.read().is_01() || !tmp_87_fu_1158_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl1_cast_fu_1166_p3.read()) - sc_biguint<6>(tmp_87_fu_1158_p1.read()));
}

void compute::thread_tmp_90_fu_1180_p2() {
    tmp_90_fu_1180_p2 = (!ap_const_lv6_1.is_01() || !tmp_89_fu_1174_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(tmp_89_fu_1174_p2.read()));
}

void compute::thread_tmp_91_cast_fu_1186_p1() {
    tmp_91_cast_fu_1186_p1 = esl_sext<64,6>(tmp_90_fu_1180_p2.read());
}

void compute::thread_tmp_91_fu_1191_p1() {
    tmp_91_fu_1191_p1 = indices_q0.read().range(6-1, 0);
}

void compute::thread_tmp_92_fu_1195_p1() {
    tmp_92_fu_1195_p1 = indices_q0.read().range(4-1, 0);
}

void compute::thread_tmp_93_fu_1207_p2() {
    tmp_93_fu_1207_p2 = (!p_shl_cast_fu_1199_p3.read().is_01() || !tmp_91_fu_1191_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl_cast_fu_1199_p3.read()) - sc_biguint<6>(tmp_91_fu_1191_p1.read()));
}

void compute::thread_tmp_94_cast_fu_1219_p1() {
    tmp_94_cast_fu_1219_p1 = esl_sext<64,6>(tmp_94_fu_1213_p2.read());
}

void compute::thread_tmp_94_fu_1213_p2() {
    tmp_94_fu_1213_p2 = (!ap_const_lv6_2.is_01() || !tmp_93_fu_1207_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_2) + sc_biguint<6>(tmp_93_fu_1207_p2.read()));
}

void compute::thread_tmp_fu_731_p1() {
    tmp_fu_731_p1 = esl_zext<64,4>(invdar_reg_435.read());
}

void compute::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_1_fu_736_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_742_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_1224_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<50>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void compute::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"covariance_matrix_address0\" :  \"" << covariance_matrix_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"covariance_matrix_ce0\" :  \"" << covariance_matrix_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"covariance_matrix_we0\" :  \"" << covariance_matrix_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"covariance_matrix_d0\" :  \"" << covariance_matrix_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"covariance_matrix_address1\" :  \"" << covariance_matrix_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"covariance_matrix_ce1\" :  \"" << covariance_matrix_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"covariance_matrix_we1\" :  \"" << covariance_matrix_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"covariance_matrix_d1\" :  \"" << covariance_matrix_d1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"centroid_address0\" :  \"" << centroid_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"centroid_ce0\" :  \"" << centroid_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"centroid_we0\" :  \"" << centroid_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"centroid_d0\" :  \"" << centroid_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"centroid_address1\" :  \"" << centroid_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"centroid_ce1\" :  \"" << centroid_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"centroid_we1\" :  \"" << centroid_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"centroid_d1\" :  \"" << centroid_d1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cloud_address0\" :  \"" << cloud_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cloud_ce0\" :  \"" << cloud_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"cloud_q0\" :  \"" << cloud_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cloud_address1\" :  \"" << cloud_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cloud_ce1\" :  \"" << cloud_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"cloud_q1\" :  \"" << cloud_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_address0\" :  \"" << indices_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_ce0\" :  \"" << indices_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_q0\" :  \"" << indices_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_address1\" :  \"" << indices_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"indices_ce1\" :  \"" << indices_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"indices_q1\" :  \"" << indices_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

